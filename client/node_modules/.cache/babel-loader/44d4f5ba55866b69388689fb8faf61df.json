{"ast":null,"code":"var _jsxFileName = \"/Users/ajaykiranreddy/react/heroku/Server/client/src/components/apps/sports/MatchesCard.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport ScoreCard from \"./ScoreCard\";\nimport Grid from '@material-ui/core/Grid';\nimport { connect } from \"react-redux\";\nimport BattingCard from \"./BattingCard\";\nimport BowlingCard from \"./BowlingCard\";\nimport Switch from \"@material-ui/core/Switch\";\n\nfunction TabPanel(props) {\n  const {\n    children,\n    value,\n    index,\n    ...other\n  } = props;\n  return /*#__PURE__*/React.createElement(\"div\", Object.assign({\n    role: \"tabpanel\",\n    hidden: value !== index,\n    id: `scrollable-auto-tabpanel-${index}`,\n    \"aria-labelledby\": `scrollable-auto-tab-${index}`\n  }, other, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }), value === index && /*#__PURE__*/React.createElement(Box, {\n    p: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 21\n    }\n  }, children)));\n}\n\nconst AntSwitch = withStyles(theme => ({\n  root: {\n    width: 28,\n    height: 16,\n    padding: 0,\n    display: 'flex'\n  },\n  switchBase: {\n    padding: 2,\n    color: theme.palette.grey[500],\n    '&$checked': {\n      transform: 'translateX(12px)',\n      color: theme.palette.common.white,\n      '& + $track': {\n        opacity: 1,\n        backgroundColor: theme.palette.primary.main,\n        borderColor: theme.palette.primary.main\n      }\n    }\n  },\n  thumb: {\n    width: 12,\n    height: 12,\n    boxShadow: 'none'\n  },\n  track: {\n    border: `1px solid ${theme.palette.grey[500]}`,\n    borderRadius: 16 / 2,\n    opacity: 1,\n    backgroundColor: theme.palette.common.white\n  },\n  checked: {}\n}))(Switch);\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `scrollable-auto-tab-${index}`,\n    'aria-controls': `scrollable-auto-tabpanel-${index}`\n  };\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    width: '100%',\n    backgroundColor: theme.palette.background.paper\n  }\n}));\n\nfunction MatchesCard(props) {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  const [state, setState] = React.useState(true);\n\n  const handleChangeSwitch = event => {\n    setState(!state);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(AppBar, {\n    position: \"static\",\n    color: \"default\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Tabs, {\n    value: value,\n    onChange: handleChange,\n    indicatorColor: \"primary\",\n    textColor: \"primary\",\n    variant: \"scrollable\",\n    scrollButtons: \"auto\",\n    \"aria-label\": \"scrollable auto tabs example\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 17\n    }\n  }, props.matchesData && props.matchesData.map((match, index) => {\n    return /*#__PURE__*/React.createElement(Tab, Object.assign({\n      label: match.series.name + '-' + match.name\n    }, a11yProps(index), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 28\n      }\n    }));\n  }))), props.matchesData && props.matchesData.map((match, index) => {\n    return /*#__PURE__*/React.createElement(TabPanel, {\n      value: value,\n      index: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 24\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      spacing: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 24\n      }\n    }, /*#__PURE__*/React.createElement(ScoreCard, {\n      matchData: match,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 28\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 25\n      }\n    }, props.selectedMatchDetails && props.selectedMatchDetails.matchDetail.innings[0].id !== 0 && /*#__PURE__*/React.createElement(Grid, {\n      component: \"label\",\n      container: true,\n      alignItems: \"center\",\n      spacing: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 33\n      }\n    }, props.selectedMatchDetails.matchDetail.innings[0].shortName), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(AntSwitch, {\n      checked: state,\n      onChange: handleChangeSwitch,\n      name: \"checkedC\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 33\n      }\n    }, props.selectedMatchDetails.matchDetail.innings[1] && props.selectedMatchDetails.matchDetail.innings[1].shortName)), \"Batting Stats\", /*#__PURE__*/React.createElement(BattingCard, {\n      state: state,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 25\n      }\n    }, \"Bowling Stats\", /*#__PURE__*/React.createElement(BowlingCard, {\n      state: state,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 29\n      }\n    }))));\n  }));\n}\n\nfunction mapStateToProps(state) {\n  return {\n    selectedMatchDetails: state.sports.selectedMatchDetails\n  };\n}\n\nexport default connect(mapStateToProps)(MatchesCard);","map":{"version":3,"sources":["/Users/ajaykiranreddy/react/heroku/Server/client/src/components/apps/sports/MatchesCard.jsx"],"names":["React","PropTypes","makeStyles","withStyles","AppBar","Tabs","Tab","Typography","Box","ScoreCard","Grid","connect","BattingCard","BowlingCard","Switch","TabPanel","props","children","value","index","other","AntSwitch","theme","root","width","height","padding","display","switchBase","color","palette","grey","transform","common","white","opacity","backgroundColor","primary","main","borderColor","thumb","boxShadow","track","border","borderRadius","checked","propTypes","node","any","isRequired","a11yProps","id","useStyles","flexGrow","background","paper","MatchesCard","classes","setValue","useState","handleChange","event","newValue","state","setState","handleChangeSwitch","matchesData","map","match","series","name","selectedMatchDetails","matchDetail","innings","shortName","mapStateToProps","sports"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport {makeStyles, withStyles} from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport ScoreCard from \"./ScoreCard\";\nimport Grid from '@material-ui/core/Grid';\nimport {connect} from \"react-redux\";\nimport BattingCard from \"./BattingCard\";\nimport BowlingCard from \"./BowlingCard\";\nimport Switch from \"@material-ui/core/Switch\";\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`scrollable-auto-tabpanel-${index}`}\n            aria-labelledby={`scrollable-auto-tab-${index}`}\n            {...other}\n        >\n            {value === index && (\n                <Box p={3}>\n                    <Typography>{children}</Typography>\n                </Box>\n            )}\n        </div>\n    );\n}\n\nconst AntSwitch = withStyles((theme) => ({\n    root: {\n        width: 28,\n        height: 16,\n        padding: 0,\n        display: 'flex',\n    },\n    switchBase: {\n        padding: 2,\n        color: theme.palette.grey[500],\n        '&$checked': {\n            transform: 'translateX(12px)',\n            color: theme.palette.common.white,\n            '& + $track': {\n                opacity: 1,\n                backgroundColor: theme.palette.primary.main,\n                borderColor: theme.palette.primary.main,\n            },\n        },\n    },\n    thumb: {\n        width: 12,\n        height: 12,\n        boxShadow: 'none',\n    },\n    track: {\n        border: `1px solid ${theme.palette.grey[500]}`,\n        borderRadius: 16 / 2,\n        opacity: 1,\n        backgroundColor: theme.palette.common.white,\n    },\n    checked: {},\n}))(Switch);\n\nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n    return {\n        id: `scrollable-auto-tab-${index}`,\n        'aria-controls': `scrollable-auto-tabpanel-${index}`,\n    };\n}\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n        width: '100%',\n        backgroundColor: theme.palette.background.paper,\n    },\n}));\n\nfunction MatchesCard(props) {\n    const classes = useStyles();\n    const [value, setValue] = React.useState(0);\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n\n    const [state, setState] = React.useState(true);\n\n    const handleChangeSwitch = (event) => {\n        setState(!state);\n    };\n\n    return (\n        <div className={classes.root}>\n            <AppBar position=\"static\" color=\"default\">\n                <Tabs\n                    value={value}\n                    onChange={handleChange}\n                    indicatorColor=\"primary\"\n                    textColor=\"primary\"\n                    variant=\"scrollable\"\n                    scrollButtons=\"auto\"\n                    aria-label=\"scrollable auto tabs example\"\n                >\n                {props.matchesData && props.matchesData.map((match,index)=>{\n                    return <Tab label={match.series.name + '-' + match.name} {...a11yProps(index)} />\n                })}\n                </Tabs>\n\n            </AppBar>\n\n            {props.matchesData && props.matchesData.map((match,index)=>{\n                return <TabPanel value={value} index={index}>\n                    <Grid container spacing={1}>\n                       <Grid item xs={4}>\n                           <ScoreCard matchData={match}/>\n                       </Grid>\n\n                        <Grid item xs={4}>\n                            {props.selectedMatchDetails && props.selectedMatchDetails.matchDetail.innings[0].id !== 0  &&\n                            <Grid component=\"label\" container alignItems=\"center\" spacing={1}>\n                                <Grid item>{props.selectedMatchDetails.matchDetail.innings[0].shortName}</Grid>\n                                <Grid item>\n                                    <AntSwitch checked={state} onChange={handleChangeSwitch} name=\"checkedC\"/>\n                                </Grid>\n                                <Grid item>{props.selectedMatchDetails.matchDetail.innings[1] && props.selectedMatchDetails.matchDetail.innings[1].shortName}</Grid>\n                            </Grid>\n                            }\n                            Batting Stats\n                            <BattingCard state={state}/>\n                        </Grid>\n\n                        <Grid item xs={4}>\n                            Bowling Stats\n                            <BowlingCard state={state}/>\n                        </Grid>\n                    </Grid>\n\n\n                </TabPanel>\n                }\n            )}\n        </div>\n    );\n}\n\nfunction mapStateToProps(state){\n    return{\n        selectedMatchDetails:state.sports.selectedMatchDetails\n    }\n}\n\nexport default connect(mapStateToProps) (MatchesCard)\n"]},"metadata":{},"sourceType":"module"}