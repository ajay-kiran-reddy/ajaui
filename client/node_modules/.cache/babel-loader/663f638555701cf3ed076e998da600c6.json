{"ast":null,"code":"var _jsxFileName = \"/Users/ajaykiranreddy/react/AjayUI/ajaui/src/components/apps/socialNetwork/Posts.jsx\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport Card from '@material-ui/core/Card';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport { red } from '@material-ui/core/colors';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport ShareIcon from '@material-ui/icons/Share';\nimport { API_URL } from \"../../../reduxModules/constants\";\nimport { connect } from \"react-redux\";\nimport SNLandingPage from \"./SNLandingPage\";\nimport { Grid } from \"@material-ui/core\";\nimport TextField from \"@material-ui/core/TextField\";\nimport SendIcon from '@material-ui/icons/Send';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: \"20px\",\n    marginTop: \"4%\",\n    width: \"100%\",\n    MuiCardHeader: {\n      title: {\n        float: \"left\"\n      }\n    }\n  },\n  media: {\n    height: 0,\n    paddingTop: '56.25%' // 16:9\n\n  },\n  expand: {\n    transform: 'rotate(0deg)',\n    marginLeft: 'auto',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest\n    })\n  },\n  expandOpen: {\n    transform: 'rotate(180deg)'\n  },\n  avatar: {\n    backgroundColor: red[500]\n  }\n}));\n\nfunction PostCard(props) {\n  const classes = useStyles();\n  const [expanded, setExpanded] = React.useState(false);\n  const [postsData, setPostsData] = React.useState([]);\n  const [updatePostData, setUpdatePostData] = React.useState(false);\n  const [comment, updateComment] = React.useState(\"\");\n  const [commentData, setCommentData] = React.useState([]);\n  React.useEffect(() => {\n    fetch(API_URL + \"/post/allposts\", {\n      method: \"GET\",\n      headers: {\n        \"Authorization\": \"Bearer \" + props.jwtToken.userDetails.accessToken\n      }\n    }).then(res => res.json()).then(data => setPostsData(data.posts));\n  }, [updatePostData]);\n\n  const handleLikeClick = id => {\n    fetch(API_URL + \"/post/like\", {\n      method: \"PUT\",\n      body: JSON.stringify({\n        postId: id\n      }),\n      headers: {\n        \"Accept\": \"application/json\",\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": \"Bearer \" + props.jwtToken.userDetails.accessToken\n      }\n    }).then(res => res.json()).then(() => setUpdatePostData(!updatePostData));\n  };\n\n  const handleUnLikeClick = id => {\n    fetch(API_URL + \"/post/unlike\", {\n      method: \"PUT\",\n      body: JSON.stringify({\n        postId: id\n      }),\n      headers: {\n        \"Accept\": \"application/json\",\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": \"Bearer \" + props.jwtToken.userDetails.accessToken\n      }\n    }).then(res => res.json()).then(() => setUpdatePostData(!updatePostData));\n  };\n\n  const handleCommentChange = e => {\n    updateComment(e.target.value);\n  };\n\n  const updateComments = id => {\n    fetch(API_URL + \"/post/comment\", {\n      method: \"PUT\",\n      body: JSON.stringify({\n        comment: comment,\n        postId: id\n      }),\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"Accept\": \"application/json\",\n        \"Authorization\": \"Bearer \" + props.jwtToken.userDetails.accessToken\n      }\n    }).then(res => res.json()).then(data => setCommentData(data.result.comment)).then(() => updateComment(\"\")).finally(() => setUpdatePostData(!updatePostData));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(SNLandingPage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 17\n    }\n  }, postsData.map((post, index) => {\n    return /*#__PURE__*/React.createElement(Card, {\n      className: classes.root,\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      spacing: 3,\n      style: {\n        padding: \"20px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Avatar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 41\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 3,\n      style: {\n        textAlign: \"left\",\n        marginTop: \"10px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"userName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 41\n      }\n    }, post.postedBy.name))), /*#__PURE__*/React.createElement(CardMedia, {\n      className: classes.media,\n      image: post.photo,\n      title: post.title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(CardContent, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body2\",\n      color: \"textSecondary\",\n      component: \"p\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 37\n      }\n    }, post.description)), /*#__PURE__*/React.createElement(CardActions, {\n      disableSpacing: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      \"aria-label\": \"add to favorites\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 37\n      }\n    }, post.likes.includes(props.jwtToken.userDetails.user._id) ? /*#__PURE__*/React.createElement(FavoriteIcon, {\n      style: {\n        fill: \"#dd0c0c\"\n      },\n      onClick: () => handleUnLikeClick(post._id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 45\n      }\n    }) : /*#__PURE__*/React.createElement(FavoriteIcon, {\n      onClick: () => handleLikeClick(post._id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 45\n      }\n    }), \" \", /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 43\n      }\n    }, post.likes.length, \" Likes\")), /*#__PURE__*/React.createElement(TextField, {\n      required: true,\n      style: {\n        width: '100%'\n      },\n      id: \"standard-basic\",\n      label: \"Write Comment\",\n      value: comment,\n      onChange: handleCommentChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(IconButton, {\n      \"aria-label\": \"share\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(SendIcon, {\n      onClick: () => updateComments(post._id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 41\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        width: \"100%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 33\n      }\n    }, post.comment.map(comment => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          width: \"100%\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          fontWeight: \"bold\",\n          fontSize: \"18px\",\n          width: \"100%\",\n          textAlign: \"initial\",\n          float: \"left\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 47\n        }\n      }, post.postedBy.name, \" : \", comment.text));\n    })));\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 17\n    }\n  })));\n}\n\nfunction mapStateToProps(state) {\n  return {\n    jwtToken: state.accessToken\n  };\n}\n\nexport default connect(mapStateToProps)(PostCard);","map":{"version":3,"sources":["/Users/ajaykiranreddy/react/AjayUI/ajaui/src/components/apps/socialNetwork/Posts.jsx"],"names":["React","makeStyles","clsx","Card","CardMedia","CardContent","CardActions","Avatar","IconButton","Typography","red","FavoriteIcon","ShareIcon","API_URL","connect","SNLandingPage","Grid","TextField","SendIcon","useStyles","theme","root","padding","marginTop","width","MuiCardHeader","title","float","media","height","paddingTop","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","avatar","backgroundColor","PostCard","props","classes","expanded","setExpanded","useState","postsData","setPostsData","updatePostData","setUpdatePostData","comment","updateComment","commentData","setCommentData","useEffect","fetch","method","headers","jwtToken","userDetails","accessToken","then","res","json","data","posts","handleLikeClick","id","body","JSON","stringify","postId","handleUnLikeClick","handleCommentChange","e","target","value","updateComments","result","finally","map","post","index","textAlign","postedBy","name","photo","description","likes","includes","user","_id","fill","length","fontWeight","fontSize","text","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport Card from '@material-ui/core/Card';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport {red} from '@material-ui/core/colors';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport ShareIcon from '@material-ui/icons/Share';\nimport {API_URL} from \"../../../reduxModules/constants\";\nimport {connect} from \"react-redux\";\nimport SNLandingPage from \"./SNLandingPage\";\nimport {Grid} from \"@material-ui/core\";\nimport TextField from \"@material-ui/core/TextField\";\nimport SendIcon from '@material-ui/icons/Send';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        padding: \"20px\",\n        marginTop: \"4%\",\n        width: \"100%\",\n        MuiCardHeader: {\n            title: {\n                float: \"left\"\n            }\n        }\n    },\n    media: {\n        height: 0,\n        paddingTop: '56.25%', // 16:9\n    },\n    expand: {\n        transform: 'rotate(0deg)',\n        marginLeft: 'auto',\n        transition: theme.transitions.create('transform', {\n            duration: theme.transitions.duration.shortest,\n        }),\n    },\n    expandOpen: {\n        transform: 'rotate(180deg)',\n    },\n    avatar: {\n        backgroundColor: red[500],\n    },\n}));\n\nfunction PostCard(props) {\n    const classes = useStyles();\n    const [expanded, setExpanded] = React.useState(false);\n    const [postsData, setPostsData] = React.useState([]);\n    const [updatePostData, setUpdatePostData] = React.useState(false);\n    const [comment, updateComment] = React.useState(\"\");\n    const [commentData, setCommentData] = React.useState([]);\n    \n    React.useEffect(() => {\n        fetch(API_URL + \"/post/allposts\", {\n            method: \"GET\",\n            headers: {\n                \"Authorization\": \"Bearer \" + props.jwtToken.userDetails.accessToken\n            }\n        })\n            .then(res => res.json())\n            .then(data => setPostsData(data.posts))\n    }, [updatePostData])\n    \n    const handleLikeClick = (id) => {\n        fetch(API_URL + \"/post/like\", {\n            method: \"PUT\",\n            body: JSON.stringify({\n                postId: id\n            }),\n            headers: {\n                \"Accept\": \"application/json\",\n                \"Content-Type\": \"application/json\",\n                \"Authorization\": \"Bearer \" + props.jwtToken.userDetails.accessToken\n            }\n        }).then(res => res.json())\n            .then(() => setUpdatePostData(!updatePostData))\n    }\n    \n    const handleUnLikeClick = (id) => {\n        fetch(API_URL + \"/post/unlike\", {\n            method: \"PUT\",\n            body: JSON.stringify({\n                postId: id\n            }),\n            headers: {\n                \"Accept\": \"application/json\",\n                \"Content-Type\": \"application/json\",\n                \"Authorization\": \"Bearer \" + props.jwtToken.userDetails.accessToken\n            }\n        }).then(res => res.json())\n            .then(() => setUpdatePostData(!updatePostData))\n    }\n    \n    const handleCommentChange = (e) => {\n        updateComment(e.target.value)\n    }\n    \n    const updateComments = (id) => {\n        fetch(API_URL + \"/post/comment\", {\n            method: \"PUT\",\n            body: JSON.stringify({\n                comment: comment,\n                postId: id\n            }),\n            headers: {\n                \"Content-type\": \"application/json\",\n                \"Accept\": \"application/json\",\n                \"Authorization\": \"Bearer \" + props.jwtToken.userDetails.accessToken\n            }\n        }).then(res => res.json())\n            .then(data => setCommentData(data.result.comment))\n            .then(() => updateComment(\"\"))\n            .finally(() => setUpdatePostData(!updatePostData))\n    }\n    \n    \n    return (\n        <div>\n            <SNLandingPage/>\n            <Grid container spacing={3}>\n                <Grid item xs={3}>\n                \n                </Grid>\n                <Grid item xs={6}>\n                    {postsData.map((post, index) => {\n                        return (\n                            <Card className={classes.root} key={index}>\n                                <Grid container spacing={3} style={{padding: \"20px\"}}>\n                                    <Grid item xs={1}>\n                                        <Avatar/>\n                                    </Grid>\n                                    <Grid item xs={3} style={{textAlign: \"left\", marginTop: \"10px\"}}>\n                                        <span className=\"userName\">{post.postedBy.name}</span>\n                                    </Grid>\n                                </Grid>\n                                <CardMedia\n                                    className={classes.media}\n                                    image={post.photo}\n                                    title={post.title}\n                                />\n                                <CardContent>\n                                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                                        {post.description}\n                                    </Typography>\n                                </CardContent>\n                                <CardActions disableSpacing>\n                                    <IconButton aria-label=\"add to favorites\">\n                                        {post.likes.includes(props.jwtToken.userDetails.user._id) ?\n                                            <FavoriteIcon style={{fill: \"#dd0c0c\"}}\n                                                          onClick={() => handleUnLikeClick(post._id)}/> :\n                                            <FavoriteIcon onClick={() => handleLikeClick(post._id)}/>\n                                            \n                                        } <span>{post.likes.length} Likes</span>\n                                    </IconButton>\n                                    \n                                    <TextField required style={{width: '100%'}} id=\"standard-basic\"\n                                               label=\"Write Comment\"\n                                               value={comment}\n                                               onChange={handleCommentChange}\n                                    />\n                                    <IconButton aria-label=\"share\">\n                                        <SendIcon onClick={() => updateComments(post._id)}/>\n                                    </IconButton>\n                                </CardActions>\n                                <div style={{width: \"100%\"}}>\n                                    {post.comment.map(comment => {\n                                        return (\n                                            <div style={{width: \"100%\"}}>\n                                              <span style={{\n                                                  fontWeight: \"bold\",\n                                                  fontSize: \"18px\",\n                                                  width: \"100%\",\n                                                  textAlign:\"initial\",\n                                                  float: \"left\"\n                                              }}>\n                                                  {post.postedBy.name} : {comment.text}\n                                            </span>\n                                            </div>\n                                        )\n                                    })}\n                                </div>\n                            </Card>\n                        )\n                    })}\n                </Grid>\n                <Grid item xs={3}>\n                </Grid>\n            </Grid>\n        \n        \n        </div>\n    \n    );\n}\n\nfunction mapStateToProps(state) {\n    return {\n        jwtToken: state.accessToken\n    }\n}\n\nexport default connect(mapStateToProps)(PostCard)\n"]},"metadata":{},"sourceType":"module"}