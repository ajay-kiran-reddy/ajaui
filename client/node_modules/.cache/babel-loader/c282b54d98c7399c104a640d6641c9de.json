{"ast":null,"code":"var _jsxFileName = \"/Users/ajaykiranreddy/react/heroku/Server/client/src/PrivateRouter.jsx\";\nimport React from 'react';\nimport { Redirect, Route } from 'react-router-dom';\nimport { useSelector } from \"react-redux\";\n\nconst PrivateRoute = ({\n  component: Component,\n  ...rest\n}) => {\n  const isLoggedIn = useSelector(state => state.loggedInUserDetails);\n  return /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n    render: props => isLoggedIn ? /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 21\n      }\n    })) : /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 21\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default PrivateRoute;","map":{"version":3,"sources":["/Users/ajaykiranreddy/react/heroku/Server/client/src/PrivateRouter.jsx"],"names":["React","Redirect","Route","useSelector","PrivateRoute","component","Component","rest","isLoggedIn","state","loggedInUserDetails","props"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,KAAnB,QAAgC,kBAAhC;AACA,SAASC,WAAT,QAA2B,aAA3B;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwB,KAAGC;AAA3B,CAAD,KAAuC;AAExD,QAAMC,UAAU,GAAGL,WAAW,CAACM,KAAK,IAAIA,KAAK,CAACC,mBAAhB,CAA9B;AAEA,sBACI,oBAAC,KAAD,oBACQH,IADR;AAEI,IAAA,MAAM,EAAEI,KAAK,IACRH,UAAD,gBACI,oBAAC,SAAD,oBAAeG,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADJ,gBAGI,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADJ;AAYH,CAhBD;;AAkBA,eAAeP,YAAf","sourcesContent":["import React from 'react';\nimport { Redirect, Route } from 'react-router-dom';\nimport { useSelector} from \"react-redux\";\n\nconst PrivateRoute = ({ component: Component, ...rest }) => {\n\n    const isLoggedIn = useSelector(state => state.loggedInUserDetails);\n\n    return (\n        <Route\n            {...rest}\n            render={props =>\n                (isLoggedIn) ? (\n                    <Component {...props} />\n                ) : (\n                    <Redirect to=\"/\" />\n                )\n            }\n        />\n    )\n};\n\nexport default PrivateRoute;\n"]},"metadata":{},"sourceType":"module"}