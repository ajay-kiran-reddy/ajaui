{"ast":null,"code":"var _jsxFileName = \"/Users/ajaykiranreddy/react/AjayUI/ajaui/src/components/apps/sports/BowlingCard.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Switch from '@material-ui/core/Switch';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\nimport { connect } from \"react-redux\";\nimport './sports.css';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650\n  }\n});\n\nfunction BowlingTable(props) {\n  const classes = useStyles();\n\n  function createData(name, maidens, overs, runsConceded, wickets, wides, economy) {\n    return {\n      name,\n      maidens,\n      overs,\n      runsConceded,\n      wickets,\n      wides,\n      economy\n    };\n  }\n\n  const Team1 = [props.scoreCardData.fullScorecard && props.scoreCardData.fullScorecard.innings[0].bowlers.map(row => createData(row.name, row.maidens, row.overs, row.runsConceded, row.wickets, row.wides, row.economy))];\n  const Team2 = [props.scoreCardData.fullScorecard.innings[1] && props.scoreCardData.fullScorecard.innings[1].bowlers.map(row => createData(row.name, row.maidens, row.overs, row.runsConceded, row.wickets, row.wides, row.economy))];\n  const rows = props.state ? Team1 : Team2;\n  return /*#__PURE__*/React.createElement(TableContainer, {\n    component: Paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, rows[0] ? /*#__PURE__*/React.createElement(Table, {\n    className: classes.table,\n    \"aria-label\": \"simple table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 29\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 29\n    }\n  }, \"Maidens\"), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 29\n    }\n  }, \"Overs\"), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 29\n    }\n  }, \"Runs\"), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 29\n    }\n  }, \"Wickets\"), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 29\n    }\n  }, \"Wides\"), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 29\n    }\n  }, \"Economy\"))), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 21\n    }\n  }, rows[0].map(row => /*#__PURE__*/React.createElement(TableRow, {\n    key: row.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    component: \"th\",\n    scope: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: \"#\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 37\n    }\n  }, row.name)), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 33\n    }\n  }, row.maidens), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 33\n    }\n  }, row.overs), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 33\n    }\n  }, row.runsConceded), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 33\n    }\n  }, row.wickets), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 33\n    }\n  }, row.wides), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 33\n    }\n  }, row.economy))))) : 'Match is Yet to start');\n}\n\nconst AntSwitch = withStyles(theme => ({\n  root: {\n    width: 28,\n    height: 16,\n    padding: 0,\n    display: 'flex'\n  },\n  switchBase: {\n    padding: 2,\n    color: theme.palette.grey[500],\n    '&$checked': {\n      transform: 'translateX(12px)',\n      color: theme.palette.common.white,\n      '& + $track': {\n        opacity: 1,\n        backgroundColor: theme.palette.primary.main,\n        borderColor: theme.palette.primary.main\n      }\n    }\n  },\n  thumb: {\n    width: 12,\n    height: 12,\n    boxShadow: 'none'\n  },\n  track: {\n    border: `1px solid ${theme.palette.grey[500]}`,\n    borderRadius: 16 / 2,\n    opacity: 1,\n    backgroundColor: theme.palette.common.white\n  },\n  checked: {}\n}))(Switch);\nBowlingCard.propTypes = {};\n\nfunction BowlingCard(props) {\n  const [state, setState] = React.useState({\n    checkedA: true,\n    checkedB: true,\n    checkedC: true\n  });\n\n  const handleChange = event => {\n    setState({ ...state,\n      [event.target.name]: event.target.checked\n    });\n  };\n\n  const [scoreCardData, setScoreCardData] = React.useState();\n  React.useEffect(() => {\n    // eslint-disable-next-line no-lone-blocks\n    {\n      props.selectedMatchDetails && fetch(`https://dev132-cricket-live-scores-v1.p.rapidapi.com/scorecards.php?seriesid=${props.selectedMatchDetails.meta.series.id}&matchid=${props.selectedMatchDetails.matchDetail.matchSummary.id}`, {\n        \"method\": \"GET\",\n        \"headers\": {\n          \"x-rapidapi-host\": \"dev132-cricket-live-scores-v1.p.rapidapi.com\",\n          \"x-rapidapi-key\": \"a2e362eba7mshf79992f1cbe7a73p1c653ejsn87bd2054f646\"\n        }\n      }).then(res => res.json()).then(data => setScoreCardData(data));\n    }\n  }, [props.selectedMatchDetails]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 9\n    }\n  }, scoreCardData && /*#__PURE__*/React.createElement(Typography, {\n    component: \"div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 17\n    }\n  }, props.state ? scoreCardData.fullScorecard && scoreCardData.fullScorecard.innings[1].name : scoreCardData.fullScorecard && scoreCardData.fullScorecard.innings[0].name), /*#__PURE__*/React.createElement(BowlingTable, {\n    scoreCardData: scoreCardData,\n    state: props.state,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 17\n    }\n  })));\n}\n\nfunction mapStateToProps(state) {\n  return {\n    selectedMatchDetails: state.sports.selectedMatchDetails\n  };\n}\n\nexport default connect(mapStateToProps)(BowlingCard);","map":{"version":3,"sources":["/Users/ajaykiranreddy/react/AjayUI/ajaui/src/components/apps/sports/BowlingCard.jsx"],"names":["React","PropTypes","Switch","Grid","Typography","withStyles","connect","makeStyles","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","useStyles","table","minWidth","BowlingTable","props","classes","createData","name","maidens","overs","runsConceded","wickets","wides","economy","Team1","scoreCardData","fullScorecard","innings","bowlers","map","row","Team2","rows","state","AntSwitch","theme","root","width","height","padding","display","switchBase","color","palette","grey","transform","common","white","opacity","backgroundColor","primary","main","borderColor","thumb","boxShadow","track","border","borderRadius","checked","BowlingCard","propTypes","setState","useState","checkedA","checkedB","checkedC","handleChange","event","target","setScoreCardData","useEffect","selectedMatchDetails","fetch","meta","series","id","matchDetail","matchSummary","then","res","json","data","mapStateToProps","sports"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Switch from '@material-ui/core/Switch';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\nimport {connect} from \"react-redux\";\nimport './sports.css';\n\n\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nconst useStyles = makeStyles({\n    table: {\n        minWidth: 650,\n    },\n});\n\n\n\nfunction BowlingTable(props) {\n    const classes = useStyles();\n\n    function createData(name, maidens, overs, runsConceded, wickets, wides, economy) {\n        return { name, maidens, overs, runsConceded, wickets, wides, economy };\n    }\n\n    const Team1 = [\n        props.scoreCardData.fullScorecard && props.scoreCardData.fullScorecard.innings[0].bowlers.map( row =>\n            createData(row.name, row.maidens, row.overs, row.runsConceded, row.wickets,row.wides,row.economy)\n        )\n    ];\n\n    const Team2 = [\n        props.scoreCardData.fullScorecard.innings[1] && props.scoreCardData.fullScorecard.innings[1].bowlers.map( row =>\n            createData(row.name, row.maidens, row.overs, row.runsConceded, row.wickets,row.wides,row.economy)\n        )\n    ];\n\n    const rows=props.state ? Team1 : Team2;\n\n    return (\n        <TableContainer component={Paper}>\n            {rows[0] ?\n                <Table className={classes.table} aria-label=\"simple table\">\n                    <TableHead>\n                        <TableRow>\n                            <TableCell>Name</TableCell>\n                            <TableCell align=\"right\">Maidens</TableCell>\n                            <TableCell align=\"right\">Overs</TableCell>\n                            <TableCell align=\"right\">Runs</TableCell>\n                            <TableCell align=\"right\">Wickets</TableCell>\n                            <TableCell align=\"right\">Wides</TableCell>\n                            <TableCell align=\"right\">Economy</TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {rows[0].map((row) => (\n                            <TableRow key={row.name}>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    <a href='#'>{row.name}</a>\n                                </TableCell>\n                                <TableCell align=\"right\">{row.maidens}</TableCell>\n                                <TableCell align=\"right\">{row.overs}</TableCell>\n                                <TableCell align=\"right\">{row.runsConceded}</TableCell>\n                                <TableCell align=\"right\">{row.wickets}</TableCell>\n                                <TableCell align=\"right\">{row.wides}</TableCell>\n                                <TableCell align=\"right\">{row.economy}</TableCell>\n                            </TableRow>\n                        )) }\n                    </TableBody>\n                </Table>\n                : 'Match is Yet to start'}\n        </TableContainer>\n    );\n}\n\n\n\nconst AntSwitch = withStyles((theme) => ({\n    root: {\n        width: 28,\n        height: 16,\n        padding: 0,\n        display: 'flex',\n    },\n    switchBase: {\n        padding: 2,\n        color: theme.palette.grey[500],\n        '&$checked': {\n            transform: 'translateX(12px)',\n            color: theme.palette.common.white,\n            '& + $track': {\n                opacity: 1,\n                backgroundColor: theme.palette.primary.main,\n                borderColor: theme.palette.primary.main,\n            },\n        },\n    },\n    thumb: {\n        width: 12,\n        height: 12,\n        boxShadow: 'none',\n    },\n    track: {\n        border: `1px solid ${theme.palette.grey[500]}`,\n        borderRadius: 16 / 2,\n        opacity: 1,\n        backgroundColor: theme.palette.common.white,\n    },\n    checked: {},\n}))(Switch);\n\nBowlingCard.propTypes = {\n\n};\n\nfunction BowlingCard(props) {\n\n    const [state, setState] = React.useState({\n        checkedA: true,\n        checkedB: true,\n        checkedC:true\n    });\n\n    const handleChange = (event) => {\n        setState({ ...state, [event.target.name]: event.target.checked });\n    };\n\n    const [scoreCardData,setScoreCardData]=React.useState();\n\n    React.useEffect(()=>{\n        // eslint-disable-next-line no-lone-blocks\n        {\n            props.selectedMatchDetails &&\n            fetch(`https://dev132-cricket-live-scores-v1.p.rapidapi.com/scorecards.php?seriesid=${props.selectedMatchDetails.meta.series.id}&matchid=${props.selectedMatchDetails.matchDetail.matchSummary.id}`, {\n                \"method\": \"GET\",\n                \"headers\": {\n                    \"x-rapidapi-host\": \"dev132-cricket-live-scores-v1.p.rapidapi.com\",\n                    \"x-rapidapi-key\": \"a2e362eba7mshf79992f1cbe7a73p1c653ejsn87bd2054f646\"\n                }\n            }).then(res => res.json())\n                .then(data => setScoreCardData(data))\n        }\n    },[props.selectedMatchDetails])\n\n\n    return (\n        <div>\n            {scoreCardData &&\n            <Typography component=\"div\">\n                {/*{props.selectedMatchDetails && props.selectedMatchDetails.matchDetail.innings[0].id !== 0 && props.selectedMatchDetails.matchDetail.innings[0].id !== 1 &&*/}\n                {/*<Grid component=\"label\" container alignItems=\"center\" spacing={1}>*/}\n                {/*    <Grid item>{props.selectedMatchDetails.matchDetail.innings[0].shortName}</Grid>*/}\n                {/*    <Grid item>*/}\n                {/*        <AntSwitch checked={state.checkedC} onChange={handleChange} name=\"checkedC\"/>*/}\n                {/*    </Grid>*/}\n                {/*    <Grid item>{props.selectedMatchDetails.matchDetail.innings[1].shortName}</Grid>*/}\n                {/*</Grid>*/}\n                {/*}*/}\n                <h4>{props.state ? scoreCardData.fullScorecard && scoreCardData.fullScorecard.innings[1].name\n                    : scoreCardData.fullScorecard && scoreCardData.fullScorecard.innings[0].name\n                }</h4>\n                <BowlingTable scoreCardData={scoreCardData}\n                 state={props.state}/>\n            </Typography>\n            }\n        </div>\n    );\n}\n\nfunction mapStateToProps(state){\n    return{\n        selectedMatchDetails:state.sports.selectedMatchDetails\n    }\n}\n\nexport default connect(mapStateToProps) (BowlingCard)"]},"metadata":{},"sourceType":"module"}