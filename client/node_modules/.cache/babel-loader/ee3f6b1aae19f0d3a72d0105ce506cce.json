{"ast":null,"code":"import _slicedToArray from\"/Users/ajaykiranreddy/react/heroku/Server/ajaui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from'react';import Grid from\"@material-ui/core/Grid\";import Paper from\"@material-ui/core/Paper\";import TextField from\"@material-ui/core/TextField\";import FormControl from\"@material-ui/core/FormControl\";import InputLabel from\"@material-ui/core/InputLabel\";import Select from\"@material-ui/core/Select\";import MenuItem from\"@material-ui/core/MenuItem\";import history from\"../../../utils/history\";import{makeStyles}from\"@material-ui/core/styles\";import{connect}from'react-redux';import{StoreEditToDoUser as _StoreEditToDoUser}from\"../../../reduxModules/actions\";var useStyles=makeStyles({table:{minWidth:650},formControl:{minWidth:120}});function ToDoModal(props){var classes=useStyles();var onSubmit=function onSubmit(){var postObject={userName:empName,taskName:taskName,status:status};if(props.editUser){fetch('http://localhost:5000/todo/edit/'+props.editUser._id,{method:\"Post\",body:JSON.stringify(postObject),headers:{\"Accept\":\"application/json\",\"Content-Type\":\"application/json\"// key: \"Content-Type\",\n// value: \"application/json\"\n}}).then(function(res){return res.json();}).then(function(){return props.StoreEditToDoUser(null);}).then(function(){return history.push('/todo');}).catch(function(err){return console.log(err);});}else{fetch('http://localhost:5000/todo/add',{method:\"Post\",body:JSON.stringify(postObject),headers:{\"Accept\":\"application/json\",\"Content-Type\":\"application/json\"// key: \"Content-Type\",\n// value: \"application/json\"\n}}).then(function(res){return res.json();}).then(function(){return history.push('/todo');}).catch(function(err){return console.log(err);});}};console.log(props.editUser,'edit user');var _React$useState=React.useState(props.editUser?props.editUser.taskName:null),_React$useState2=_slicedToArray(_React$useState,2),taskName=_React$useState2[0],setTaskName=_React$useState2[1];var _React$useState3=React.useState(props.editUser?props.editUser.userName:null),_React$useState4=_slicedToArray(_React$useState3,2),empName=_React$useState4[0],setEmpName=_React$useState4[1];var _React$useState5=React.useState(props.editUser?props.editUser.status:null),_React$useState6=_slicedToArray(_React$useState5,2),status=_React$useState6[0],setStatus=_React$useState6[1];var _React$useState7=React.useState(false),_React$useState8=_slicedToArray(_React$useState7,2),open=_React$useState8[0],setOpen=_React$useState8[1];var handleEmployeeName=function handleEmployeeName(e){setEmpName(e.target.value);};var handleTaskName=function handleTaskName(e){setTaskName(e.target.value);};var routeBackTodo=function routeBackTodo(){history.push('/todo');};var handleChange=function handleChange(event){setStatus(event.target.value);};var handleClose=function handleClose(){setOpen(false);};var handleOpen=function handleOpen(){setOpen(true);};return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Grid,{container:true,spacing:2},/*#__PURE__*/React.createElement(Grid,{item:true,xs:3}),/*#__PURE__*/React.createElement(Grid,{item:true,xs:6},/*#__PURE__*/React.createElement(Paper,{style:{width:'100%'}},/*#__PURE__*/React.createElement(Grid,{container:true,spacing:2,style:{marginTop:\"2%\"}},/*#__PURE__*/React.createElement(Grid,{item:true,xs:6},/*#__PURE__*/React.createElement(TextField,{id:\"outlined-basic\",label:\"Employee Name\",onChange:handleEmployeeName,value:empName,variant:\"outlined\"}),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(TextField,{id:\"outlined\",label:\"Task Name\",onChange:handleTaskName,value:taskName,variant:\"outlined\"}))),/*#__PURE__*/React.createElement(Grid,{item:true,xs:6},/*#__PURE__*/React.createElement(FormControl,{className:classes.formControl},/*#__PURE__*/React.createElement(InputLabel,{id:\"demo-controlled-open-select-label\"},\"Select Status\"),/*#__PURE__*/React.createElement(Select,{labelId:\"demo-controlled-open-select-label\",id:\"demo-controlled-open-select\",open:open,onClose:handleClose,onOpen:handleOpen,value:status,onChange:handleChange},/*#__PURE__*/React.createElement(MenuItem,{value:\"\"},/*#__PURE__*/React.createElement(\"em\",null,\"None\")),/*#__PURE__*/React.createElement(MenuItem,{value:'Started'},\"Started\"),/*#__PURE__*/React.createElement(MenuItem,{value:'Yet to pick'},\"Yet to pick\"),/*#__PURE__*/React.createElement(MenuItem,{value:'Completed'},\"Completed\"))),/*#__PURE__*/React.createElement(\"div\",null))),/*#__PURE__*/React.createElement(\"button\",{onClick:routeBackTodo},\"Cancel\"),/*#__PURE__*/React.createElement(\"button\",{onClick:onSubmit},\"Submit\"))),/*#__PURE__*/React.createElement(Grid,{item:true,xs:3}))));}function mapStateToProps(state){return{editUser:state.todo.editUser};}var mapDispatchToProps=function mapDispatchToProps(dispatch){return{StoreEditToDoUser:function StoreEditToDoUser(payload){return dispatch(_StoreEditToDoUser(payload));}};};export default connect(mapStateToProps,mapDispatchToProps)(ToDoModal);","map":{"version":3,"sources":["/Users/ajaykiranreddy/react/heroku/Server/ajaui/src/components/apps/todo/ToDoModal.jsx"],"names":["React","Grid","Paper","TextField","FormControl","InputLabel","Select","MenuItem","history","makeStyles","connect","StoreEditToDoUser","useStyles","table","minWidth","formControl","ToDoModal","props","classes","onSubmit","postObject","userName","empName","taskName","status","editUser","fetch","_id","method","body","JSON","stringify","headers","then","res","json","push","catch","err","console","log","useState","setTaskName","setEmpName","setStatus","open","setOpen","handleEmployeeName","e","target","value","handleTaskName","routeBackTodo","handleChange","event","handleClose","handleOpen","width","marginTop","mapStateToProps","state","todo","mapDispatchToProps","dispatch","payload"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport history from \"../../../utils/history\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {connect} from 'react-redux';\nimport {StoreEditToDoUser} from \"../../../reduxModules/actions\";\n\nToDoModal.propTypes = {};\n\nconst useStyles = makeStyles({\n    table: {\n        minWidth: 650,\n    },\n    formControl: {\n        minWidth: 120,\n    },\n});\n\nfunction ToDoModal(props) {\n    const classes = useStyles();\n    const onSubmit = () => {\n        const postObject = {\n            userName: empName,\n            taskName: taskName,\n            status: status\n        };\n\n        if (props.editUser) {\n            fetch('http://localhost:5000/todo/edit/' + props.editUser._id, {\n                method: \"Post\",\n                body: JSON.stringify(postObject),\n                headers: {\n                    \"Accept\": \"application/json\",\n                    \"Content-Type\": \"application/json\",\n                    // key: \"Content-Type\",\n                    // value: \"application/json\"\n                }\n            }).then(res => res.json())\n                .then(()=>props.StoreEditToDoUser(null))\n                .then(() => history.push('/todo'))\n                .catch(err => console.log(err))\n        } else {\n            fetch('http://localhost:5000/todo/add', {\n                method: \"Post\",\n                body: JSON.stringify(postObject),\n                headers: {\n                    \"Accept\": \"application/json\",\n                    \"Content-Type\": \"application/json\",\n                    // key: \"Content-Type\",\n                    // value: \"application/json\"\n                }\n            }).then(res => res.json())\n                .then(() => history.push('/todo'))\n                .catch(err => console.log(err))\n        }\n    }\n\n    console.log(props.editUser, 'edit user')\n    const [taskName, setTaskName] = React.useState(props.editUser ? props.editUser.taskName : null);\n    const [empName, setEmpName] = React.useState(props.editUser ? props.editUser.userName : null);\n    const [status, setStatus] = React.useState(props.editUser ? props.editUser.status : null);\n    const [open, setOpen] = React.useState(false);\n\n    const handleEmployeeName = (e) => {\n        setEmpName(e.target.value)\n    }\n\n    const handleTaskName = (e) => {\n        setTaskName(e.target.value)\n    }\n\n    const routeBackTodo = () => {\n        history.push('/todo')\n    }\n\n    const handleChange = (event) => {\n        setStatus(event.target.value);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    const handleOpen = () => {\n        setOpen(true);\n    };\n\n    return (\n        <div>\n            <React.Fragment>\n                <Grid container spacing={2}>\n                    <Grid item xs={3}>\n\n                    </Grid>\n\n                    <Grid item xs={6}>\n                        <Paper style={{width: '100%'}}>\n\n                            <Grid container spacing={2} style={{marginTop: \"2%\"}}>\n                                <Grid item xs={6}>\n                                    <TextField id=\"outlined-basic\"\n                                               label=\"Employee Name\"\n                                               onChange={handleEmployeeName}\n                                               value={empName}\n                                               variant=\"outlined\"/>\n                                    <div>\n                                        <TextField id=\"outlined\"\n                                                   label=\"Task Name\"\n                                                   onChange={handleTaskName}\n                                                   value={taskName}\n                                                   variant=\"outlined\"/>\n                                    </div>\n\n\n                                </Grid>\n\n                                <Grid item xs={6}>\n                                    <FormControl className={classes.formControl}>\n                                        <InputLabel id=\"demo-controlled-open-select-label\">Select\n                                            Status</InputLabel>\n                                        <Select\n                                            labelId=\"demo-controlled-open-select-label\"\n                                            id=\"demo-controlled-open-select\"\n                                            open={open}\n                                            onClose={handleClose}\n                                            onOpen={handleOpen}\n                                            value={status}\n                                            onChange={handleChange}\n                                        >\n                                            <MenuItem value=\"\">\n                                                <em>None</em>\n                                            </MenuItem>\n                                            <MenuItem value={'Started'}>Started</MenuItem>\n                                            <MenuItem value={'Yet to pick'}>Yet to pick</MenuItem>\n                                            <MenuItem value={'Completed'}>Completed</MenuItem>\n                                        </Select>\n                                    </FormControl>\n\n                                    <div>\n                                        {/*<MaterialUIPickers/>*/}\n                                    </div>\n                                </Grid>\n                            </Grid>\n\n                            <button onClick={routeBackTodo}>\n                                Cancel\n                            </button>\n\n                            <button onClick={onSubmit}>\n                                Submit\n                            </button>\n                        </Paper>\n                    </Grid>\n\n                    <Grid item xs={3}>\n\n                    </Grid>\n                </Grid>\n\n\n            </React.Fragment>\n        </div>\n    );\n}\n\nfunction mapStateToProps(state) {\n    return {\n        editUser: state.todo.editUser\n    }\n}\n\nconst mapDispatchToProps=(dispatch)=>{\n    return{\n        StoreEditToDoUser:(payload)=>dispatch(StoreEditToDoUser(payload))\n    }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(ToDoModal);"]},"metadata":{},"sourceType":"module"}