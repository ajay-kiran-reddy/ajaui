{"ast":null,"code":"import _slicedToArray from\"/Users/ajaykiranreddy/react/heroku/Server/ajaui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from'react';import Switch from'@material-ui/core/Switch';import Grid from'@material-ui/core/Grid';import Typography from'@material-ui/core/Typography';import{withStyles}from'@material-ui/core/styles';import{connect}from\"react-redux\";import'./sports.css';import{makeStyles}from'@material-ui/core/styles';import Table from'@material-ui/core/Table';import TableBody from'@material-ui/core/TableBody';import TableCell from'@material-ui/core/TableCell';import TableContainer from'@material-ui/core/TableContainer';import TableHead from'@material-ui/core/TableHead';import TableRow from'@material-ui/core/TableRow';import Paper from'@material-ui/core/Paper';import{trackPromise}from\"react-promise-tracker\";var useStyles=makeStyles({table:{minWidth:650}});function BattingTable(props){var classes=useStyles();function createData(name,howOut,runs,balls,fours,sixes,strikeRate){return{name:name,howOut:howOut,runs:runs,balls:balls,fours:fours,sixes:sixes,strikeRate:strikeRate};}var Team1=[props.scoreCardData.fullScorecard&&props.scoreCardData.fullScorecard.innings[0].batsmen.map(function(row){return createData(row.name,row.howOut,row.runs,row.balls,row.fours,row.sixes,row.strikeRate);})];var Team2=[props.scoreCardData.fullScorecard&&props.scoreCardData.fullScorecard.innings[1]&&props.scoreCardData.fullScorecard.innings[1].batsmen.map(function(row){return createData(row.name,row.howOut,row.runs,row.balls,row.fours,row.sixes,row.strikeRate);})];var rows=props.state?Team1:Team2;return/*#__PURE__*/React.createElement(TableContainer,{component:Paper},rows[0]?/*#__PURE__*/React.createElement(Table,{className:classes.table,\"aria-label\":\"simple table\"},/*#__PURE__*/React.createElement(TableHead,null,/*#__PURE__*/React.createElement(TableRow,null,/*#__PURE__*/React.createElement(TableCell,null,\"Name\"),/*#__PURE__*/React.createElement(TableCell,{align:\"right\"},\"Out\"),/*#__PURE__*/React.createElement(TableCell,{align:\"right\"},\"Runs\"),/*#__PURE__*/React.createElement(TableCell,{align:\"right\"},\"Balls\"),/*#__PURE__*/React.createElement(TableCell,{align:\"right\"},\"Fours\"),/*#__PURE__*/React.createElement(TableCell,{align:\"right\"},\"Sixes\"),/*#__PURE__*/React.createElement(TableCell,{align:\"right\"},\"Sr Rate\"))),/*#__PURE__*/React.createElement(TableBody,null,rows[0].map(function(row){return/*#__PURE__*/React.createElement(TableRow,{key:row.name},/*#__PURE__*/React.createElement(TableCell,{component:\"th\",scope:\"row\"},/*#__PURE__*/React.createElement(\"a\",{href:\"#\"},row.name)),/*#__PURE__*/React.createElement(TableCell,{align:\"right\"},row.howOut),/*#__PURE__*/React.createElement(TableCell,{align:\"right\"},row.runs),/*#__PURE__*/React.createElement(TableCell,{align:\"right\"},row.balls),/*#__PURE__*/React.createElement(TableCell,{align:\"right\"},row.fours),/*#__PURE__*/React.createElement(TableCell,{align:\"right\"},row.sixes),/*#__PURE__*/React.createElement(TableCell,{align:\"right\"},row.strikeRate));}))):'Match is Yet to start');}function BattingCard(props){var _React$useState=React.useState(),_React$useState2=_slicedToArray(_React$useState,2),scoreCardData=_React$useState2[0],setScoreCardData=_React$useState2[1];React.useEffect(function(){// eslint-disable-next-line no-lone-blocks\n{props.selectedMatchDetails&&trackPromise(fetch(\"https://dev132-cricket-live-scores-v1.p.rapidapi.com/scorecards.php?seriesid=\".concat(props.selectedMatchDetails.meta.series.id,\"&matchid=\").concat(props.selectedMatchDetails.matchDetail.matchSummary.id),{\"method\":\"GET\",\"headers\":{\"x-rapidapi-host\":\"dev132-cricket-live-scores-v1.p.rapidapi.com\",\"x-rapidapi-key\":\"a2e362eba7mshf79992f1cbe7a73p1c653ejsn87bd2054f646\"}})).then(function(res){return res.json();}).then(function(data){return setScoreCardData(data);});}},[props.selectedMatchDetails]);console.log(scoreCardData,'scoreCardData');return/*#__PURE__*/React.createElement(\"div\",null,scoreCardData&&/*#__PURE__*/React.createElement(Typography,{component:\"div\"},/*#__PURE__*/React.createElement(\"h4\",null,props.state?scoreCardData.fullScorecard&&scoreCardData.fullScorecard.innings[0].name:scoreCardData.fullScorecard.innings[1]&&scoreCardData.fullScorecard.innings[1].name),scoreCardData&&/*#__PURE__*/React.createElement(BattingTable,{scoreCardData:scoreCardData,state:props.state})));}function mapStateToProps(state){return{selectedMatchDetails:state.sports.selectedMatchDetails};}export default connect(mapStateToProps)(BattingCard);","map":{"version":3,"sources":["/Users/ajaykiranreddy/react/heroku/Server/ajaui/src/components/apps/sports/BattingCard.jsx"],"names":["React","Switch","Grid","Typography","withStyles","connect","makeStyles","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","trackPromise","useStyles","table","minWidth","BattingTable","props","classes","createData","name","howOut","runs","balls","fours","sixes","strikeRate","Team1","scoreCardData","fullScorecard","innings","batsmen","map","row","Team2","rows","state","BattingCard","useState","setScoreCardData","useEffect","selectedMatchDetails","fetch","meta","series","id","matchDetail","matchSummary","then","res","json","data","console","log","mapStateToProps","sports"],"mappings":"sKAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,MAAOC,CAAAA,MAAP,KAAmB,0BAAnB,CACA,MAAOC,CAAAA,IAAP,KAAiB,wBAAjB,CACA,MAAOC,CAAAA,UAAP,KAAuB,8BAAvB,CACA,OAASC,UAAT,KAA2B,0BAA3B,CACA,OAAQC,OAAR,KAAsB,aAAtB,CACA,MAAO,cAAP,CAIA,OAASC,UAAT,KAA2B,0BAA3B,CACA,MAAOC,CAAAA,KAAP,KAAkB,yBAAlB,CACA,MAAOC,CAAAA,SAAP,KAAsB,6BAAtB,CACA,MAAOC,CAAAA,SAAP,KAAsB,6BAAtB,CACA,MAAOC,CAAAA,cAAP,KAA2B,kCAA3B,CACA,MAAOC,CAAAA,SAAP,KAAsB,6BAAtB,CACA,MAAOC,CAAAA,QAAP,KAAqB,4BAArB,CACA,MAAOC,CAAAA,KAAP,KAAkB,yBAAlB,CACA,OAAQC,YAAR,KAA2B,uBAA3B,CAEA,GAAMC,CAAAA,SAAS,CAAGT,UAAU,CAAC,CACzBU,KAAK,CAAE,CACHC,QAAQ,CAAE,GADP,CADkB,CAAD,CAA5B,CAQA,QAASC,CAAAA,YAAT,CAAsBC,KAAtB,CAA6B,CACzB,GAAMC,CAAAA,OAAO,CAAGL,SAAS,EAAzB,CAEA,QAASM,CAAAA,UAAT,CAAoBC,IAApB,CAA0BC,MAA1B,CAAkCC,IAAlC,CAAwCC,KAAxC,CAA+CC,KAA/C,CAAsDC,KAAtD,CAA6DC,UAA7D,CAAyE,CACrE,MAAO,CAAEN,IAAI,CAAJA,IAAF,CAAQC,MAAM,CAANA,MAAR,CAAgBC,IAAI,CAAJA,IAAhB,CAAsBC,KAAK,CAALA,KAAtB,CAA6BC,KAAK,CAALA,KAA7B,CAAoCC,KAAK,CAALA,KAApC,CAA2CC,UAAU,CAAVA,UAA3C,CAAP,CACH,CAED,GAAMC,CAAAA,KAAK,CAAG,CACVV,KAAK,CAACW,aAAN,CAAoBC,aAApB,EAAqCZ,KAAK,CAACW,aAAN,CAAoBC,aAApB,CAAkCC,OAAlC,CAA0C,CAA1C,EAA6CC,OAA7C,CAAqDC,GAArD,CAA0D,SAAAC,GAAG,QACtFd,CAAAA,UAAU,CAACc,GAAG,CAACb,IAAL,CAAWa,GAAG,CAACZ,MAAf,CAAuBY,GAAG,CAACX,IAA3B,CAAiCW,GAAG,CAACV,KAArC,CAA4CU,GAAG,CAACT,KAAhD,CAAsDS,GAAG,CAACR,KAA1D,CAAgEQ,GAAG,CAACP,UAApE,CAD4E,EAA7D,CAD3B,CAAd,CAKA,GAAMQ,CAAAA,KAAK,CAAC,CACRjB,KAAK,CAACW,aAAN,CAAoBC,aAApB,EAAqCZ,KAAK,CAACW,aAAN,CAAoBC,aAApB,CAAkCC,OAAlC,CAA0C,CAA1C,CAArC,EAAqFb,KAAK,CAACW,aAAN,CAAoBC,aAApB,CAAkCC,OAAlC,CAA0C,CAA1C,EAA6CC,OAA7C,CAAqDC,GAArD,CAA0D,SAAAC,GAAG,QAC9Id,CAAAA,UAAU,CAACc,GAAG,CAACb,IAAL,CAAWa,GAAG,CAACZ,MAAf,CAAuBY,GAAG,CAACX,IAA3B,CAAiCW,GAAG,CAACV,KAArC,CAA4CU,GAAG,CAACT,KAAhD,CAAsDS,GAAG,CAACR,KAA1D,CAAgEQ,GAAG,CAACP,UAApE,CADoI,EAA7D,CAD7E,CAAZ,CAKA,GAAMS,CAAAA,IAAI,CAAClB,KAAK,CAACmB,KAAN,CAAcT,KAAd,CAAsBO,KAAjC,CAEA,mBACI,oBAAC,cAAD,EAAgB,SAAS,CAAEvB,KAA3B,EACKwB,IAAI,CAAC,CAAD,CAAJ,cACD,oBAAC,KAAD,EAAO,SAAS,CAAEjB,OAAO,CAACJ,KAA1B,CAAiC,aAAW,cAA5C,eACI,oBAAC,SAAD,mBACI,oBAAC,QAAD,mBACI,oBAAC,SAAD,aADJ,cAEI,oBAAC,SAAD,EAAW,KAAK,CAAC,OAAjB,QAFJ,cAGI,oBAAC,SAAD,EAAW,KAAK,CAAC,OAAjB,SAHJ,cAII,oBAAC,SAAD,EAAW,KAAK,CAAC,OAAjB,UAJJ,cAKI,oBAAC,SAAD,EAAW,KAAK,CAAC,OAAjB,UALJ,cAMI,oBAAC,SAAD,EAAW,KAAK,CAAC,OAAjB,UANJ,cAOI,oBAAC,SAAD,EAAW,KAAK,CAAC,OAAjB,YAPJ,CADJ,CADJ,cAYI,oBAAC,SAAD,MACKqB,IAAI,CAAC,CAAD,CAAJ,CAAQH,GAAR,CAAY,SAACC,GAAD,qBACT,oBAAC,QAAD,EAAU,GAAG,CAAEA,GAAG,CAACb,IAAnB,eACI,oBAAC,SAAD,EAAW,SAAS,CAAC,IAArB,CAA0B,KAAK,CAAC,KAAhC,eACG,yBAAG,IAAI,CAAC,GAAR,EAAaa,GAAG,CAACb,IAAjB,CADH,CADJ,cAII,oBAAC,SAAD,EAAW,KAAK,CAAC,OAAjB,EAA0Ba,GAAG,CAACZ,MAA9B,CAJJ,cAKI,oBAAC,SAAD,EAAW,KAAK,CAAC,OAAjB,EAA0BY,GAAG,CAACX,IAA9B,CALJ,cAMI,oBAAC,SAAD,EAAW,KAAK,CAAC,OAAjB,EAA0BW,GAAG,CAACV,KAA9B,CANJ,cAOI,oBAAC,SAAD,EAAW,KAAK,CAAC,OAAjB,EAA0BU,GAAG,CAACT,KAA9B,CAPJ,cAQI,oBAAC,SAAD,EAAW,KAAK,CAAC,OAAjB,EAA0BS,GAAG,CAACR,KAA9B,CARJ,cASI,oBAAC,SAAD,EAAW,KAAK,CAAC,OAAjB,EAA0BQ,GAAG,CAACP,UAA9B,CATJ,CADS,EAAZ,CADL,CAZJ,CADC,CA6Ba,uBA9BlB,CADJ,CAkCH,CAMD,QAASW,CAAAA,WAAT,CAAqBpB,KAArB,CAA4B,qBAIenB,KAAK,CAACwC,QAAN,EAJf,oDAIjBV,aAJiB,qBAIHW,gBAJG,qBAMxBzC,KAAK,CAAC0C,SAAN,CAAgB,UAAI,CAChB;AACA,CACIvB,KAAK,CAACwB,oBAAN,EACI7B,YAAY,CAChB8B,KAAK,wFAAiFzB,KAAK,CAACwB,oBAAN,CAA2BE,IAA3B,CAAgCC,MAAhC,CAAuCC,EAAxH,qBAAsI5B,KAAK,CAACwB,oBAAN,CAA2BK,WAA3B,CAAuCC,YAAvC,CAAoDF,EAA1L,EAAgM,CACjM,SAAU,KADuL,CAEjM,UAAW,CACP,kBAAmB,8CADZ,CAEP,iBAAkB,oDAFX,CAFsL,CAAhM,CADW,CAAZ,CAOAG,IAPA,CAOK,SAAAC,GAAG,QAAIA,CAAAA,GAAG,CAACC,IAAJ,EAAJ,EAPR,EAQCF,IARD,CAQM,SAAAG,IAAI,QAAIZ,CAAAA,gBAAgB,CAACY,IAAD,CAApB,EARV,CADJ,CAUH,CACJ,CAdD,CAcE,CAAClC,KAAK,CAACwB,oBAAP,CAdF,EAgBAW,OAAO,CAACC,GAAR,CAAYzB,aAAZ,CAA0B,eAA1B,EAEA,mBACI,+BACKA,aAAa,eACd,oBAAC,UAAD,EAAY,SAAS,CAAC,KAAtB,eAEI,8BAAKX,KAAK,CAACmB,KAAN,CAAcR,aAAa,CAACC,aAAd,EAA+BD,aAAa,CAACC,aAAd,CAA4BC,OAA5B,CAAoC,CAApC,EAAuCV,IAApF,CACDQ,aAAa,CAACC,aAAd,CAA4BC,OAA5B,CAAoC,CAApC,GAA0CF,aAAa,CAACC,aAAd,CAA4BC,OAA5B,CAAoC,CAApC,EAAuCV,IADrF,CAFJ,CAIKQ,aAAa,eAAI,oBAAC,YAAD,EAAc,aAAa,CAAEA,aAA7B,CACL,KAAK,CAAEX,KAAK,CAACmB,KADR,EAJtB,CAFJ,CADJ,CAaH,CAED,QAASkB,CAAAA,eAAT,CAAyBlB,KAAzB,CAA+B,CAC3B,MAAM,CACFK,oBAAoB,CAACL,KAAK,CAACmB,MAAN,CAAad,oBADhC,CAAN,CAGH,CAED,cAAetC,CAAAA,OAAO,CAACmD,eAAD,CAAP,CAA0BjB,WAA1B,CAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Switch from '@material-ui/core/Switch';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\nimport {connect} from \"react-redux\";\nimport './sports.css';\n\n\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport {trackPromise} from \"react-promise-tracker\";\n\nconst useStyles = makeStyles({\n    table: {\n        minWidth: 650,\n    },\n});\n\n\n\nfunction BattingTable(props) {\n    const classes = useStyles();\n\n    function createData(name, howOut, runs, balls, fours, sixes, strikeRate) {\n        return { name, howOut, runs, balls, fours, sixes, strikeRate };\n    }\n\n    const Team1 = [\n        props.scoreCardData.fullScorecard && props.scoreCardData.fullScorecard.innings[0].batsmen.map( row =>\n                    createData(row.name, row.howOut, row.runs, row.balls, row.fours,row.sixes,row.strikeRate))\n    ];\n\n    const Team2=[\n        props.scoreCardData.fullScorecard && props.scoreCardData.fullScorecard.innings[1] && props.scoreCardData.fullScorecard.innings[1].batsmen.map( row =>\n            createData(row.name, row.howOut, row.runs, row.balls, row.fours,row.sixes,row.strikeRate))\n    ];\n\n    const rows=props.state ? Team1 : Team2;\n\n    return (\n        <TableContainer component={Paper}>\n            {rows[0] ?\n            <Table className={classes.table} aria-label=\"simple table\">\n                <TableHead>\n                    <TableRow>\n                        <TableCell>Name</TableCell>\n                        <TableCell align=\"right\">Out</TableCell>\n                        <TableCell align=\"right\">Runs</TableCell>\n                        <TableCell align=\"right\">Balls</TableCell>\n                        <TableCell align=\"right\">Fours</TableCell>\n                        <TableCell align=\"right\">Sixes</TableCell>\n                        <TableCell align=\"right\">Sr Rate</TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {rows[0].map((row) => (\n                        <TableRow key={row.name}>\n                            <TableCell component=\"th\" scope=\"row\">\n                               <a href='#'>{row.name}</a>\n                            </TableCell>\n                            <TableCell align=\"right\">{row.howOut}</TableCell>\n                            <TableCell align=\"right\">{row.runs}</TableCell>\n                            <TableCell align=\"right\">{row.balls}</TableCell>\n                            <TableCell align=\"right\">{row.fours}</TableCell>\n                            <TableCell align=\"right\">{row.sixes}</TableCell>\n                            <TableCell align=\"right\">{row.strikeRate}</TableCell>\n                        </TableRow>\n                    )) }\n                </TableBody>\n            </Table>\n                        : 'Match is Yet to start'}\n        </TableContainer>\n    );\n}\n\nBattingCard.propTypes = {\n\n};\n\nfunction BattingCard(props) {\n\n\n\n    const [scoreCardData,setScoreCardData]=React.useState();\n\n    React.useEffect(()=>{\n        // eslint-disable-next-line no-lone-blocks\n        {\n            props.selectedMatchDetails &&\n                trackPromise(\n            fetch(`https://dev132-cricket-live-scores-v1.p.rapidapi.com/scorecards.php?seriesid=${props.selectedMatchDetails.meta.series.id}&matchid=${props.selectedMatchDetails.matchDetail.matchSummary.id}`, {\n                \"method\": \"GET\",\n                \"headers\": {\n                    \"x-rapidapi-host\": \"dev132-cricket-live-scores-v1.p.rapidapi.com\",\n                    \"x-rapidapi-key\": \"a2e362eba7mshf79992f1cbe7a73p1c653ejsn87bd2054f646\"\n                }\n            })).then(res => res.json())\n                .then(data => setScoreCardData(data))\n        }\n    },[props.selectedMatchDetails])\n\n    console.log(scoreCardData,'scoreCardData')\n\n    return (\n        <div>\n            {scoreCardData &&\n            <Typography component=\"div\">\n\n                <h4>{props.state ? scoreCardData.fullScorecard && scoreCardData.fullScorecard.innings[0].name :\n                    scoreCardData.fullScorecard.innings[1] && scoreCardData.fullScorecard.innings[1].name}</h4>\n                {scoreCardData && <BattingTable scoreCardData={scoreCardData}\n                             state={props.state}/>}\n            </Typography>\n            }\n        </div>\n    );\n}\n\nfunction mapStateToProps(state){\n    return{\n        selectedMatchDetails:state.sports.selectedMatchDetails\n    }\n}\n\nexport default connect(mapStateToProps) (BattingCard)"]},"metadata":{},"sourceType":"module"}