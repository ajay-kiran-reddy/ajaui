{"ast":null,"code":"var _jsxFileName = \"/Users/ajaykiranreddy/react/heroku/Server/client/src/components/apps/socialNetwork/Posts.jsx\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport Card from '@material-ui/core/Card';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport { red } from '@material-ui/core/colors';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport ShareIcon from '@material-ui/icons/Share';\nimport { API_URL } from \"../../../reduxModules/constants\";\nimport { connect } from \"react-redux\";\nimport SNLandingPage from \"./SNLandingPage\";\nimport { Grid } from \"@material-ui/core\";\nimport TextField from \"@material-ui/core/TextField\";\nimport SendIcon from '@material-ui/icons/Send';\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\nimport { storeUserProfile } from \"../../../reduxModules/actions\";\nimport history from \"../../../utils/history\";\nimport { trackPromise } from \"react-promise-tracker\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: \"20px\",\n    marginTop: \"4%\",\n    width: \"100%\",\n    MuiCardHeader: {\n      title: {\n        float: \"left\"\n      }\n    }\n  },\n  media: {\n    height: 0,\n    paddingTop: '56.25%' // 16:9\n\n  },\n  expand: {\n    transform: 'rotate(0deg)',\n    marginLeft: 'auto',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest\n    })\n  },\n  expandOpen: {\n    transform: 'rotate(180deg)'\n  },\n  avatar: {\n    backgroundColor: red[500]\n  }\n}));\n\nfunction PostCard(props) {\n  const classes = useStyles();\n  const [expanded, setExpanded] = React.useState(false);\n  const [postsData, setPostsData] = React.useState([]);\n  const [updatePostData, setUpdatePostData] = React.useState(false);\n  const [comment, updateComment] = React.useState(\"\");\n  const [commentData, setCommentData] = React.useState([]);\n  React.useEffect(() => {\n    trackPromise(fetch(API_URL + \"/post/allposts\", {\n      method: \"GET\",\n      headers: {\n        \"Authorization\": \"Bearer \" + props.jwtToken.userDetails.accessToken\n      }\n    })).then(res => res.json()).then(data => setPostsData(data.posts));\n  }, [updatePostData]);\n\n  const handleLikeClick = id => {\n    fetch(API_URL + \"/post/like\", {\n      method: \"PUT\",\n      body: JSON.stringify({\n        postId: id\n      }),\n      headers: {\n        \"Accept\": \"application/json\",\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": \"Bearer \" + props.jwtToken.userDetails.accessToken\n      }\n    }).then(res => res.json()).then(() => setUpdatePostData(!updatePostData));\n  };\n\n  const handleUnLikeClick = id => {\n    fetch(API_URL + \"/post/unlike\", {\n      method: \"PUT\",\n      body: JSON.stringify({\n        postId: id\n      }),\n      headers: {\n        \"Accept\": \"application/json\",\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": \"Bearer \" + props.jwtToken.userDetails.accessToken\n      }\n    }).then(res => res.json()).then(() => setUpdatePostData(!updatePostData));\n  };\n\n  const handleCommentChange = e => {\n    updateComment(e.target.value);\n  };\n\n  const updateComments = id => {\n    fetch(API_URL + \"/post/comment\", {\n      method: \"PUT\",\n      body: JSON.stringify({\n        comment: comment,\n        postId: id\n      }),\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"Accept\": \"application/json\",\n        \"Authorization\": \"Bearer \" + props.jwtToken.userDetails.accessToken\n      }\n    }).then(res => res.json()).then(data => setCommentData(data.result.comment)).then(() => updateComment(\"\")).finally(() => setUpdatePostData(!updatePostData));\n  };\n\n  const deleteComment = (postId, commentId) => {\n    fetch(API_URL + `/post/${postId}/${commentId}`, {\n      method: \"DELETE\",\n      headers: {\n        \"Accept\": \"application/json\",\n        \"Content-type\": \"application/json\",\n        \"Authorization\": props.jwtToken.userDetails.accessToken\n      }\n    }).then(res => res.json()).then(data => console.log(data, 'deleted data')).finally(() => setUpdatePostData(!updatePostData));\n  };\n\n  const deletePost = postId => {\n    fetch(API_URL + `/post/deletePost/${postId}`, {\n      method: \"DELETE\",\n      headers: {\n        \"Accept\": \"application/json\",\n        \"content-type\": \"application/json\",\n        \"Authorization\": props.jwtToken.userDetails.accessToken\n      }\n    }).then(res => res.json()).then(data => console.log(data)).catch(err => console.log(err));\n  };\n\n  const routeToUserProfile = userId => {\n    props.storeUserProfile(userId);\n    history.push('/UserProfile');\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(SNLandingPage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 17\n    }\n  }, postsData.map((post, index) => {\n    return /*#__PURE__*/React.createElement(Card, {\n      className: classes.root,\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      spacing: 3,\n      style: {\n        padding: \"20px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Avatar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 41\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 3,\n      style: {\n        textAlign: \"left\",\n        marginTop: \"10px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"userName\",\n      onClick: () => routeToUserProfile(post.postedBy._id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 41\n      }\n    }, post.postedBy.name)), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 7,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 37\n      }\n    }), post.postedBy._id === props.jwtToken.userDetails.user._id ? /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 98\n      }\n    }, /*#__PURE__*/React.createElement(DeleteOutlineIcon, {\n      style: {\n        fill: \"red\"\n      },\n      onClick: () => deletePost(post._id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 41\n      }\n    })) : /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 47\n      }\n    })), /*#__PURE__*/React.createElement(CardMedia, {\n      className: classes.media,\n      image: post.photo,\n      title: post.title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(CardContent, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body2\",\n      color: \"textSecondary\",\n      component: \"p\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 37\n      }\n    }, post.description)), /*#__PURE__*/React.createElement(CardActions, {\n      disableSpacing: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      \"aria-label\": \"add to favorites\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 37\n      }\n    }, post.likes.includes(props.jwtToken.userDetails.user._id) ? /*#__PURE__*/React.createElement(FavoriteIcon, {\n      style: {\n        fill: \"#dd0c0c\"\n      },\n      onClick: () => handleUnLikeClick(post._id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 45\n      }\n    }) : /*#__PURE__*/React.createElement(FavoriteIcon, {\n      onClick: () => handleLikeClick(post._id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 45\n      }\n    }), \" \", /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 43\n      }\n    }, post.likes.length, \" Likes\")), /*#__PURE__*/React.createElement(TextField, {\n      required: true,\n      style: {\n        width: '100%'\n      },\n      id: \"standard-basic\",\n      label: \"Write Comment\",\n      value: comment,\n      onChange: handleCommentChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(IconButton, {\n      \"aria-label\": \"share\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(SendIcon, {\n      onClick: () => updateComments(post._id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 41\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        width: \"100%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 33\n      }\n    }, post.comment.map(comment => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          width: \"100%\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          fontWeight: \"bold\",\n          fontSize: \"18px\",\n          display: \"flex\",\n          width: \"100%\",\n          textAlign: \"initial\",\n          float: \"left\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 47\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          width: \"90%\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 50\n        }\n      }, comment.postedBy.name, \" : \", comment.text, \" \"), \" \", /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          textAlign: \"end\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 126\n        }\n      }, /*#__PURE__*/React.createElement(DeleteOutlineIcon, {\n        onClick: () => deleteComment(post._id, comment._id),\n        style: {\n          cursor: \"pointer\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 78\n        }\n      }), \" \")));\n    })));\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 17\n    }\n  })));\n}\n\nfunction mapStateToProps(state) {\n  return {\n    jwtToken: state.accessToken\n  };\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    storeUserProfile: payload => dispatch(storeUserProfile(payload))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PostCard);","map":{"version":3,"sources":["/Users/ajaykiranreddy/react/heroku/Server/client/src/components/apps/socialNetwork/Posts.jsx"],"names":["React","makeStyles","clsx","Card","CardMedia","CardContent","CardActions","Avatar","IconButton","Typography","red","FavoriteIcon","ShareIcon","API_URL","connect","SNLandingPage","Grid","TextField","SendIcon","DeleteOutlineIcon","storeUserProfile","history","trackPromise","useStyles","theme","root","padding","marginTop","width","MuiCardHeader","title","float","media","height","paddingTop","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","avatar","backgroundColor","PostCard","props","classes","expanded","setExpanded","useState","postsData","setPostsData","updatePostData","setUpdatePostData","comment","updateComment","commentData","setCommentData","useEffect","fetch","method","headers","jwtToken","userDetails","accessToken","then","res","json","data","posts","handleLikeClick","id","body","JSON","stringify","postId","handleUnLikeClick","handleCommentChange","e","target","value","updateComments","result","finally","deleteComment","commentId","console","log","deletePost","catch","err","routeToUserProfile","userId","push","map","post","index","textAlign","postedBy","_id","name","user","fill","photo","description","likes","includes","length","fontWeight","fontSize","display","text","cursor","mapStateToProps","state","mapDispatchToProps","dispatch","payload"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport Card from '@material-ui/core/Card';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport {red} from '@material-ui/core/colors';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport ShareIcon from '@material-ui/icons/Share';\nimport {API_URL} from \"../../../reduxModules/constants\";\nimport {connect} from \"react-redux\";\nimport SNLandingPage from \"./SNLandingPage\";\nimport {Grid} from \"@material-ui/core\";\nimport TextField from \"@material-ui/core/TextField\";\nimport SendIcon from '@material-ui/icons/Send';\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\nimport {storeUserProfile} from \"../../../reduxModules/actions\";\nimport history from \"../../../utils/history\";\nimport {trackPromise} from \"react-promise-tracker\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        padding: \"20px\",\n        marginTop: \"4%\",\n        width: \"100%\",\n        MuiCardHeader: {\n            title: {\n                float: \"left\"\n            }\n        }\n    },\n    media: {\n        height: 0,\n        paddingTop: '56.25%', // 16:9\n    },\n    expand: {\n        transform: 'rotate(0deg)',\n        marginLeft: 'auto',\n        transition: theme.transitions.create('transform', {\n            duration: theme.transitions.duration.shortest,\n        }),\n    },\n    expandOpen: {\n        transform: 'rotate(180deg)',\n    },\n    avatar: {\n        backgroundColor: red[500],\n    },\n}));\n\nfunction PostCard(props) {\n    const classes = useStyles();\n    const [expanded, setExpanded] = React.useState(false);\n    const [postsData, setPostsData] = React.useState([]);\n    const [updatePostData, setUpdatePostData] = React.useState(false);\n    const [comment, updateComment] = React.useState(\"\");\n    const [commentData, setCommentData] = React.useState([]);\n    \n    React.useEffect(() => {\n        trackPromise(\n        fetch(API_URL + \"/post/allposts\", {\n            method: \"GET\",\n            headers: {\n                \"Authorization\": \"Bearer \" + props.jwtToken.userDetails.accessToken\n            }\n        }))\n            .then(res => res.json())\n            .then(data => setPostsData(data.posts))\n    }, [updatePostData])\n    \n    const handleLikeClick = (id) => {\n        fetch(API_URL + \"/post/like\", {\n            method: \"PUT\",\n            body: JSON.stringify({\n                postId: id\n            }),\n            headers: {\n                \"Accept\": \"application/json\",\n                \"Content-Type\": \"application/json\",\n                \"Authorization\": \"Bearer \" + props.jwtToken.userDetails.accessToken\n            }\n        }).then(res => res.json())\n            .then(() => setUpdatePostData(!updatePostData))\n    }\n    \n    const handleUnLikeClick = (id) => {\n        fetch(API_URL + \"/post/unlike\", {\n            method: \"PUT\",\n            body: JSON.stringify({\n                postId: id\n            }),\n            headers: {\n                \"Accept\": \"application/json\",\n                \"Content-Type\": \"application/json\",\n                \"Authorization\": \"Bearer \" + props.jwtToken.userDetails.accessToken\n            }\n        }).then(res => res.json())\n            .then(() => setUpdatePostData(!updatePostData))\n    }\n    \n    const handleCommentChange = (e) => {\n        updateComment(e.target.value)\n    }\n    \n    const updateComments = (id) => {\n        fetch(API_URL + \"/post/comment\", {\n            method: \"PUT\",\n            body: JSON.stringify({\n                comment: comment,\n                postId: id\n            }),\n            headers: {\n                \"Content-type\": \"application/json\",\n                \"Accept\": \"application/json\",\n                \"Authorization\": \"Bearer \" + props.jwtToken.userDetails.accessToken\n            }\n        }).then(res => res.json())\n            .then(data => setCommentData(data.result.comment))\n            .then(() => updateComment(\"\"))\n            .finally(() => setUpdatePostData(!updatePostData))\n    }\n    \n    const deleteComment = (postId, commentId) => {\n        fetch(API_URL + `/post/${postId}/${commentId}`, {\n            method: \"DELETE\",\n            headers: {\n                \"Accept\": \"application/json\",\n                \"Content-type\": \"application/json\",\n                \"Authorization\": props.jwtToken.userDetails.accessToken\n            }\n        }).then(res => res.json())\n            .then(data => console.log(data, 'deleted data'))\n            .finally(() => setUpdatePostData(!updatePostData))\n    }\n    \n    const deletePost = (postId) => {\n        fetch(API_URL + `/post/deletePost/${postId}`, {\n            method: \"DELETE\",\n            headers: {\n                \"Accept\": \"application/json\",\n                \"content-type\": \"application/json\",\n                \"Authorization\": props.jwtToken.userDetails.accessToken\n            }\n        }).then(res => res.json())\n            .then(data => console.log(data))\n            .catch(err=>console.log(err))\n    }\n    \n    const routeToUserProfile=(userId)=>{\n        props.storeUserProfile(userId);\n        history.push('/UserProfile')\n    }\n    \n    return (\n        <div>\n            <SNLandingPage/>\n            <Grid container spacing={3}>\n                <Grid item xs={3}>\n                \n                </Grid>\n                <Grid item xs={6}>\n                    {postsData.map((post, index) => {\n                        return (\n                            <Card className={classes.root} key={index}>\n                                <Grid container spacing={3} style={{padding: \"20px\"}}>\n                                    <Grid item xs={1}>\n                                        <Avatar/>\n                                    </Grid>\n                                    <Grid item xs={3} style={{textAlign: \"left\", marginTop: \"10px\"}}>\n                                        <span className=\"userName\" onClick={()=>routeToUserProfile(post.postedBy._id)}>{post.postedBy.name}</span>\n                                    </Grid>\n                                    <Grid item xs={7}>\n                                    </Grid>\n                                    {post.postedBy._id === props.jwtToken.userDetails.user._id ? <Grid item xs={1}>\n                                        <DeleteOutlineIcon style={{fill:\"red\"}}\n                                                           onClick={()=>deletePost(post._id)}\n                                        />\n                                    </Grid> : <Grid item xs={1}></Grid>}\n                                    \n                                </Grid>\n                                <CardMedia\n                                    className={classes.media}\n                                    image={post.photo}\n                                    title={post.title}\n                                />\n                                <CardContent>\n                                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                                        {post.description}\n                                    </Typography>\n                                </CardContent>\n                                <CardActions disableSpacing>\n                                    <IconButton aria-label=\"add to favorites\">\n                                        {post.likes.includes(props.jwtToken.userDetails.user._id) ?\n                                            <FavoriteIcon style={{fill: \"#dd0c0c\"}}\n                                                          onClick={() => handleUnLikeClick(post._id)}/> :\n                                            <FavoriteIcon onClick={() => handleLikeClick(post._id)}/>\n                                            \n                                        } <span>{post.likes.length} Likes</span>\n                                    </IconButton>\n                                    \n                                    <TextField required style={{width: '100%'}} id=\"standard-basic\"\n                                               label=\"Write Comment\"\n                                               value={comment}\n                                               onChange={handleCommentChange}\n                                    />\n                                    <IconButton aria-label=\"share\">\n                                        <SendIcon onClick={() => updateComments(post._id)}/>\n                                    </IconButton>\n                                </CardActions>\n                                <div style={{width: \"100%\"}}>\n                                    {post.comment.map(comment => {\n                                        return (\n                                            <div style={{width: \"100%\"}}>\n                                              <span style={{\n                                                  fontWeight: \"bold\",\n                                                  fontSize: \"18px\",\n                                                  display: \"flex\",\n                                                  width: \"100%\",\n                                                  textAlign: \"initial\",\n                                                  float: \"left\"\n                                              }}>\n                                                 <span\n                                                     style={{width: \"90%\"}}>{comment.postedBy.name} : {comment.text} </span> <span\n                                                  style={{textAlign: \"end\"}}><DeleteOutlineIcon\n                                                  onClick={() => deleteComment(post._id, comment._id)}\n                                                  style={{cursor: \"pointer\"}}/> </span>\n                                            </span>\n                                            \n                                            </div>\n                                        )\n                                    })}\n                                </div>\n                            </Card>\n                        )\n                    })}\n                </Grid>\n                <Grid item xs={3}>\n                </Grid>\n            </Grid>\n        \n        \n        </div>\n    \n    );\n}\n\nfunction mapStateToProps(state) {\n    return {\n        jwtToken: state.accessToken\n    }\n}\n\nconst mapDispatchToProps=(dispatch)=>{\n    return{\n        storeUserProfile:(payload)=>dispatch(storeUserProfile(payload))\n    }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(PostCard)\n"]},"metadata":{},"sourceType":"module"}