{"ast":null,"code":"import _defineProperty from\"/Users/ajaykiranreddy/react/heroku/Server/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/Users/ajaykiranreddy/react/heroku/Server/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/ajaykiranreddy/react/heroku/Server/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from'react';import Switch from'@material-ui/core/Switch';import Grid from'@material-ui/core/Grid';import Typography from'@material-ui/core/Typography';import{withStyles}from'@material-ui/core/styles';import{connect}from\"react-redux\";import'./sports.css';import{makeStyles}from'@material-ui/core/styles';import Table from'@material-ui/core/Table';import TableBody from'@material-ui/core/TableBody';import TableCell from'@material-ui/core/TableCell';import TableContainer from'@material-ui/core/TableContainer';import TableHead from'@material-ui/core/TableHead';import TableRow from'@material-ui/core/TableRow';import Paper from'@material-ui/core/Paper';import{trackPromise}from\"react-promise-tracker\";var useStyles=makeStyles({table:{minWidth:650}});function BowlingTable(props){var classes=useStyles();function createData(name,maidens,overs,runsConceded,wickets,wides,economy){return{name:name,maidens:maidens,overs:overs,runsConceded:runsConceded,wickets:wickets,wides:wides,economy:economy};}var Team1=[props.scoreCardData.fullScorecard&&props.scoreCardData.fullScorecard.innings[0].bowlers.map(function(row){return createData(row.name,row.maidens,row.overs,row.runsConceded,row.wickets,row.wides,row.economy);})];var Team2=[props.scoreCardData.fullScorecard&&props.scoreCardData.fullScorecard.innings[1]&&props.scoreCardData.fullScorecard.innings[1].bowlers.map(function(row){return createData(row.name,row.maidens,row.overs,row.runsConceded,row.wickets,row.wides,row.economy);})];var rows=props.state?Team1:Team2;return/*#__PURE__*/React.createElement(TableContainer,{component:Paper},rows[0]?/*#__PURE__*/React.createElement(Table,{className:classes.table,\"aria-label\":\"simple table\"},/*#__PURE__*/React.createElement(TableHead,null,/*#__PURE__*/React.createElement(TableRow,null,/*#__PURE__*/React.createElement(TableCell,null,\"Name\"),/*#__PURE__*/React.createElement(TableCell,{align:\"right\"},\"Maidens\"),/*#__PURE__*/React.createElement(TableCell,{align:\"right\"},\"Overs\"),/*#__PURE__*/React.createElement(TableCell,{align:\"right\"},\"Runs\"),/*#__PURE__*/React.createElement(TableCell,{align:\"right\"},\"Wickets\"),/*#__PURE__*/React.createElement(TableCell,{align:\"right\"},\"Wides\"),/*#__PURE__*/React.createElement(TableCell,{align:\"right\"},\"Economy\"))),/*#__PURE__*/React.createElement(TableBody,null,rows[0].map(function(row){return/*#__PURE__*/React.createElement(TableRow,{key:row.name},/*#__PURE__*/React.createElement(TableCell,{component:\"th\",scope:\"row\"},/*#__PURE__*/React.createElement(\"a\",{href:\"#\"},row.name)),/*#__PURE__*/React.createElement(TableCell,{align:\"right\"},row.maidens),/*#__PURE__*/React.createElement(TableCell,{align:\"right\"},row.overs),/*#__PURE__*/React.createElement(TableCell,{align:\"right\"},row.runsConceded),/*#__PURE__*/React.createElement(TableCell,{align:\"right\"},row.wickets),/*#__PURE__*/React.createElement(TableCell,{align:\"right\"},row.wides),/*#__PURE__*/React.createElement(TableCell,{align:\"right\"},row.economy));}))):'Match is Yet to start');}var AntSwitch=withStyles(function(theme){return{root:{width:28,height:16,padding:0,display:'flex'},switchBase:{padding:2,color:theme.palette.grey[500],'&$checked':{transform:'translateX(12px)',color:theme.palette.common.white,'& + $track':{opacity:1,backgroundColor:theme.palette.primary.main,borderColor:theme.palette.primary.main}}},thumb:{width:12,height:12,boxShadow:'none'},track:{border:\"1px solid \".concat(theme.palette.grey[500]),borderRadius:16/2,opacity:1,backgroundColor:theme.palette.common.white},checked:{}};})(Switch);function BowlingCard(props){var _React$useState=React.useState({checkedA:true,checkedB:true,checkedC:true}),_React$useState2=_slicedToArray(_React$useState,2),state=_React$useState2[0],setState=_React$useState2[1];var handleChange=function handleChange(event){setState(_objectSpread(_objectSpread({},state),{},_defineProperty({},event.target.name,event.target.checked)));};var _React$useState3=React.useState(),_React$useState4=_slicedToArray(_React$useState3,2),scoreCardData=_React$useState4[0],setScoreCardData=_React$useState4[1];React.useEffect(function(){// eslint-disable-next-line no-lone-blocks\n{props.selectedMatchDetails&&trackPromise(fetch(\"https://dev132-cricket-live-scores-v1.p.rapidapi.com/scorecards.php?seriesid=\".concat(props.selectedMatchDetails.meta.series.id,\"&matchid=\").concat(props.selectedMatchDetails.matchDetail.matchSummary.id),{\"method\":\"GET\",\"headers\":{\"x-rapidapi-host\":\"dev132-cricket-live-scores-v1.p.rapidapi.com\",\"x-rapidapi-key\":\"a2e362eba7mshf79992f1cbe7a73p1c653ejsn87bd2054f646\"}})).then(function(res){return res.json();}).then(function(data){return setScoreCardData(data);});}},[props.selectedMatchDetails]);return/*#__PURE__*/React.createElement(\"div\",null,scoreCardData&&/*#__PURE__*/React.createElement(Typography,{component:\"div\"},/*#__PURE__*/React.createElement(\"h4\",null,props.state?scoreCardData.fullScorecard&&scoreCardData.fullScorecard.innings[1]&&scoreCardData.fullScorecard.innings[1].name:scoreCardData.fullScorecard&&scoreCardData.fullScorecard.innings[0].name),/*#__PURE__*/React.createElement(BowlingTable,{scoreCardData:scoreCardData,state:props.state})));}function mapStateToProps(state){return{selectedMatchDetails:state.sports.selectedMatchDetails};}export default connect(mapStateToProps)(BowlingCard);","map":{"version":3,"sources":["/Users/ajaykiranreddy/react/heroku/Server/client/src/components/apps/sports/BowlingCard.jsx"],"names":["React","Switch","Grid","Typography","withStyles","connect","makeStyles","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","trackPromise","useStyles","table","minWidth","BowlingTable","props","classes","createData","name","maidens","overs","runsConceded","wickets","wides","economy","Team1","scoreCardData","fullScorecard","innings","bowlers","map","row","Team2","rows","state","AntSwitch","theme","root","width","height","padding","display","switchBase","color","palette","grey","transform","common","white","opacity","backgroundColor","primary","main","borderColor","thumb","boxShadow","track","border","borderRadius","checked","BowlingCard","useState","checkedA","checkedB","checkedC","setState","handleChange","event","target","setScoreCardData","useEffect","selectedMatchDetails","fetch","meta","series","id","matchDetail","matchSummary","then","res","json","data","mapStateToProps","sports"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Switch from '@material-ui/core/Switch';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\nimport {connect} from \"react-redux\";\nimport './sports.css';\n\n\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport {trackPromise} from \"react-promise-tracker\";\n\nconst useStyles = makeStyles({\n    table: {\n        minWidth: 650,\n    },\n});\n\n\n\nfunction BowlingTable(props) {\n    const classes = useStyles();\n\n    function createData(name, maidens, overs, runsConceded, wickets, wides, economy) {\n        return { name, maidens, overs, runsConceded, wickets, wides, economy };\n    }\n\n    const Team1 = [\n        props.scoreCardData.fullScorecard && props.scoreCardData.fullScorecard.innings[0].bowlers.map( row =>\n            createData(row.name, row.maidens, row.overs, row.runsConceded, row.wickets,row.wides,row.economy)\n        )\n    ];\n\n    const Team2 = [\n        props.scoreCardData.fullScorecard && props.scoreCardData.fullScorecard.innings[1] && props.scoreCardData.fullScorecard.innings[1].bowlers.map( row =>\n            createData(row.name, row.maidens, row.overs, row.runsConceded, row.wickets,row.wides,row.economy)\n        )\n    ];\n\n    const rows=props.state ? Team1 : Team2;\n\n    return (\n        <TableContainer component={Paper}>\n            {rows[0] ?\n                <Table className={classes.table} aria-label=\"simple table\">\n                    <TableHead>\n                        <TableRow>\n                            <TableCell>Name</TableCell>\n                            <TableCell align=\"right\">Maidens</TableCell>\n                            <TableCell align=\"right\">Overs</TableCell>\n                            <TableCell align=\"right\">Runs</TableCell>\n                            <TableCell align=\"right\">Wickets</TableCell>\n                            <TableCell align=\"right\">Wides</TableCell>\n                            <TableCell align=\"right\">Economy</TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {rows[0].map((row) => (\n                            <TableRow key={row.name}>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    <a href='#'>{row.name}</a>\n                                </TableCell>\n                                <TableCell align=\"right\">{row.maidens}</TableCell>\n                                <TableCell align=\"right\">{row.overs}</TableCell>\n                                <TableCell align=\"right\">{row.runsConceded}</TableCell>\n                                <TableCell align=\"right\">{row.wickets}</TableCell>\n                                <TableCell align=\"right\">{row.wides}</TableCell>\n                                <TableCell align=\"right\">{row.economy}</TableCell>\n                            </TableRow>\n                        )) }\n                    </TableBody>\n                </Table>\n                : 'Match is Yet to start'}\n        </TableContainer>\n    );\n}\n\n\n\nconst AntSwitch = withStyles((theme) => ({\n    root: {\n        width: 28,\n        height: 16,\n        padding: 0,\n        display: 'flex',\n    },\n    switchBase: {\n        padding: 2,\n        color: theme.palette.grey[500],\n        '&$checked': {\n            transform: 'translateX(12px)',\n            color: theme.palette.common.white,\n            '& + $track': {\n                opacity: 1,\n                backgroundColor: theme.palette.primary.main,\n                borderColor: theme.palette.primary.main,\n            },\n        },\n    },\n    thumb: {\n        width: 12,\n        height: 12,\n        boxShadow: 'none',\n    },\n    track: {\n        border: `1px solid ${theme.palette.grey[500]}`,\n        borderRadius: 16 / 2,\n        opacity: 1,\n        backgroundColor: theme.palette.common.white,\n    },\n    checked: {},\n}))(Switch);\n\nBowlingCard.propTypes = {\n\n};\n\nfunction BowlingCard(props) {\n\n    const [state, setState] = React.useState({\n        checkedA: true,\n        checkedB: true,\n        checkedC:true\n    });\n\n    const handleChange = (event) => {\n        setState({ ...state, [event.target.name]: event.target.checked });\n    };\n\n    const [scoreCardData,setScoreCardData]=React.useState();\n\n    React.useEffect(()=>{\n        // eslint-disable-next-line no-lone-blocks\n        {\n            props.selectedMatchDetails &&\n                trackPromise(\n            fetch(`https://dev132-cricket-live-scores-v1.p.rapidapi.com/scorecards.php?seriesid=${props.selectedMatchDetails.meta.series.id}&matchid=${props.selectedMatchDetails.matchDetail.matchSummary.id}`, {\n                \"method\": \"GET\",\n                \"headers\": {\n                    \"x-rapidapi-host\": \"dev132-cricket-live-scores-v1.p.rapidapi.com\",\n                    \"x-rapidapi-key\": \"a2e362eba7mshf79992f1cbe7a73p1c653ejsn87bd2054f646\"\n                }\n            })).then(res => res.json())\n                .then(data => setScoreCardData(data))\n        }\n    },[props.selectedMatchDetails])\n\n\n    return (\n        <div>\n            {scoreCardData &&\n            <Typography component=\"div\">\n                <h4>{props.state ? scoreCardData.fullScorecard && scoreCardData.fullScorecard.innings[1] && scoreCardData.fullScorecard.innings[1].name\n                    : scoreCardData.fullScorecard && scoreCardData.fullScorecard.innings[0].name\n                }</h4>\n                <BowlingTable scoreCardData={scoreCardData}\n                 state={props.state}/>\n            </Typography>\n            }\n        </div>\n    );\n}\n\nfunction mapStateToProps(state){\n    return{\n        selectedMatchDetails:state.sports.selectedMatchDetails\n    }\n}\n\nexport default connect(mapStateToProps) (BowlingCard)"]},"metadata":{},"sourceType":"module"}