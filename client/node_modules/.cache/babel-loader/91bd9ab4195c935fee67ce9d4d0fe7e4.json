{"ast":null,"code":"import _slicedToArray from\"/Users/ajaykiranreddy/react/heroku/Server/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from'react';import{makeStyles}from'@material-ui/core/styles';import Table from'@material-ui/core/Table';import TableBody from'@material-ui/core/TableBody';import TableCell from'@material-ui/core/TableCell';import TableContainer from'@material-ui/core/TableContainer';import TableHead from'@material-ui/core/TableHead';import TableRow from'@material-ui/core/TableRow';import Paper from'@material-ui/core/Paper';import PlusOneRoundedIcon from'@material-ui/icons/PlusOneRounded';import DeleteOutlineIcon from'@material-ui/icons/DeleteOutline';import history from\"../../../utils/history\";import{AiFillDelete}from\"react-icons/ai\";import{StoreEditToDoUser as _StoreEditToDoUser}from\"../../../reduxModules/actions\";import{connect}from'react-redux';// import 'date-fns';\nvar useStyles=makeStyles({table:{minWidth:650},formControl:{minWidth:120}});function TaskTable(props){var _React$useState=React.useState(),_React$useState2=_slicedToArray(_React$useState,2),tableData=_React$useState2[0],setTableData=_React$useState2[1];var _React$useState3=React.useState(false),_React$useState4=_slicedToArray(_React$useState3,2),refreshData=_React$useState4[0],setrefreshData=_React$useState4[1];React.useEffect(function(){fetch(\"http://localhost:5000/todo\",{method:\"GET\"}).then(function(res){return res.json();}).then(function(data){return setTableData(data);});},[refreshData]);var addNewTask=function addNewTask(){history.push('/addTodo');};function createData(userName,taskName,status,_id){return{userName:userName,taskName:taskName,status:status,_id:_id};}var rows=tableData&&tableData.map(function(row){return createData(row.userName,row.taskName,row.status,row._id);});var deleteTodoItem=function deleteTodoItem(id){fetch('http://localhost:5000/todo/delete/'+id,{method:\"Delete\"}).then(function(){return setrefreshData(!refreshData);});};var editTodoItem=function editTodoItem(user){props.StoreEditToDoUser(user);history.push('/addTodo');};var classes=useStyles();return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(TableContainer,{component:Paper},/*#__PURE__*/React.createElement(Table,{className:classes.table,\"aria-label\":\"simple table\"},/*#__PURE__*/React.createElement(TableHead,null,/*#__PURE__*/React.createElement(TableRow,{style:{border:'1px solid transparent'}},/*#__PURE__*/React.createElement(TableCell,null,\"Task\"),/*#__PURE__*/React.createElement(TableCell,{align:\"right\"},\"Status\"),/*#__PURE__*/React.createElement(TableCell,{align:\"right\"},\"Priority\"),/*#__PURE__*/React.createElement(TableCell,{align:\"right\"},\"Action\")),/*#__PURE__*/React.createElement(TableRow,{style:{width:'100%',cursor:'pointer'}},/*#__PURE__*/React.createElement(TableCell,{style:{border:'2px dashed green'},onClick:addNewTask},/*#__PURE__*/React.createElement(PlusOneRoundedIcon,{style:{color:'#5cb61b',marginBottom:'-1.5%'}}),/*#__PURE__*/React.createElement(\"span\",{style:{marginLeft:\"2%\",color:'#5cb61b',fontSize:'16px'}},\"Add New Task\")))),/*#__PURE__*/React.createElement(TableBody,null,rows&&rows.map(function(row){return/*#__PURE__*/React.createElement(TableRow,{key:row.userName},/*#__PURE__*/React.createElement(TableCell,{component:\"th\",scope:\"row\"},row.userName),/*#__PURE__*/React.createElement(TableCell,{align:\"right\"},row.taskName),/*#__PURE__*/React.createElement(TableCell,{align:\"right\"},row.status),/*#__PURE__*/React.createElement(TableCell,{align:\"right\"},/*#__PURE__*/React.createElement(\"button\",{onClick:function onClick(){return editTodoItem(row);}},\"EDIT\"),/*#__PURE__*/React.createElement(\"button\",{onClick:function onClick(){return deleteTodoItem(row._id);}},\"DELETE\")));})))));}var mapDispatchToProps=function mapDispatchToProps(dispatch){return{StoreEditToDoUser:function StoreEditToDoUser(payload){return dispatch(_StoreEditToDoUser(payload));}};};export default connect(null,mapDispatchToProps)(TaskTable);","map":{"version":3,"sources":["/Users/ajaykiranreddy/react/heroku/Server/client/src/components/apps/todo/TaskTable.jsx"],"names":["React","makeStyles","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","PlusOneRoundedIcon","DeleteOutlineIcon","history","AiFillDelete","StoreEditToDoUser","connect","useStyles","table","minWidth","formControl","TaskTable","props","useState","tableData","setTableData","refreshData","setrefreshData","useEffect","fetch","method","then","res","json","data","addNewTask","push","createData","userName","taskName","status","_id","rows","map","row","deleteTodoItem","id","editTodoItem","user","classes","border","width","cursor","color","marginBottom","marginLeft","fontSize","mapDispatchToProps","dispatch","payload"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport PlusOneRoundedIcon from '@material-ui/icons/PlusOneRounded';\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\nimport history from \"../../../utils/history\";\nimport { AiFillDelete } from \"react-icons/ai\";\nimport {StoreEditToDoUser} from \"../../../reduxModules/actions\";\nimport {connect} from 'react-redux';\n// import 'date-fns';\n\nconst useStyles = makeStyles({\n    table: {\n        minWidth: 650,\n    },\n    formControl: {\n        minWidth: 120,\n    },\n});\n\nfunction TaskTable(props) {\n\n    const [tableData, setTableData] = React.useState();\n\n\n    const [refreshData, setrefreshData] = React.useState(false);\n    React.useEffect(() => {\n        fetch(\"http://localhost:5000/todo\", {\n            method: \"GET\"\n        }).then(res => res.json())\n            .then(data => setTableData(data))\n    }, [refreshData])\n\n\n    const addNewTask = () => {\n        history.push('/addTodo')\n    }\n\n    function createData(userName, taskName, status, _id) {\n        return {userName, taskName, status, _id};\n    }\n\n    const rows = tableData && tableData.map((row) => {\n        return createData(row.userName, row.taskName, row.status, row._id)\n    });\n\n    const deleteTodoItem = (id) => {\n        fetch('http://localhost:5000/todo/delete/' + id, {\n            method: \"Delete\"\n        }).then(() => setrefreshData(!refreshData))\n    }\n\n    const editTodoItem=(user)=>{\n        props.StoreEditToDoUser(user);\n        history.push('/addTodo')\n    }\n\n    const classes = useStyles();\n\n    return (\n        <React.Fragment>\n            <TableContainer component={Paper}>\n                <Table className={classes.table} aria-label=\"simple table\">\n                    <TableHead>\n                        <TableRow style={{border: '1px solid transparent'}}>\n                            <TableCell>Task</TableCell>\n                            <TableCell align=\"right\">Status</TableCell>\n                            <TableCell align=\"right\">Priority</TableCell>\n                            <TableCell align=\"right\">Action</TableCell>\n                        </TableRow>\n\n                        <TableRow style={{width: '100%', cursor: 'pointer'}}>\n                            <TableCell style={{border: '2px dashed green'}} onClick={addNewTask}>\n                                <PlusOneRoundedIcon style={{color: '#5cb61b', marginBottom: '-1.5%'}}/>\n                                <span style={{\n                                    marginLeft: \"2%\",\n                                    color: '#5cb61b',\n                                    fontSize: '16px'\n                                }}>Add New Task</span>\n                            </TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {rows && rows.map((row) => (\n                            <TableRow key={row.userName}>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    {row.userName}\n                                </TableCell>\n                                <TableCell align=\"right\">{row.taskName}</TableCell>\n                                <TableCell align=\"right\">{row.status}</TableCell>\n\n                                <TableCell align=\"right\">\n\n                                    <button\n                                        onClick={() => editTodoItem(row)}>\n                                        EDIT\n                                    </button>\n\n                                    <button onClick={() => deleteTodoItem(row._id)}>\n                                        {/*//     onClick={() => editTodoItem(row._id)}>*/}\n                                        {/*// Edit*/}\n\n                                        DELETE\n                                    </button>\n\n                                </TableCell>\n                            </TableRow>\n                        ))}\n                    </TableBody>\n                </Table>\n            </TableContainer>\n        </React.Fragment>\n\n    );\n}\n\nconst mapDispatchToProps=(dispatch)=>{\n    return{\n        StoreEditToDoUser:(payload)=>dispatch(StoreEditToDoUser(payload))\n    }\n}\n\nexport default connect(null,mapDispatchToProps)(TaskTable)"]},"metadata":{},"sourceType":"module"}