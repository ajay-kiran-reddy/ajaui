{"ast":null,"code":"var _jsxFileName = \"/Users/ajaykiranreddy/react/AjayUI/ajaui/src/components/apps/socialNetwork/Posts.jsx\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Collapse from '@material-ui/core/Collapse';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport { red } from '@material-ui/core/colors';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport { API_URL } from \"../../../reduxModules/constants\";\nimport { connect } from \"react-redux\";\nimport SNLandingPage from \"./SNLandingPage\";\nimport { Grid } from \"@material-ui/core\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: \"20px\",\n    marginTop: \"4%\",\n    width: \"100%\",\n    MuiCardHeader: {\n      title: {\n        float: \"left\"\n      }\n    }\n  },\n  media: {\n    height: 0,\n    paddingTop: '56.25%' // 16:9\n\n  },\n  expand: {\n    transform: 'rotate(0deg)',\n    marginLeft: 'auto',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest\n    })\n  },\n  expandOpen: {\n    transform: 'rotate(180deg)'\n  },\n  avatar: {\n    backgroundColor: red[500]\n  }\n}));\n\nfunction PostCard(props) {\n  const classes = useStyles();\n  const [expanded, setExpanded] = React.useState(false);\n  const [postsData, setPostsData] = React.useState([]);\n  const [showUnlike, setShowUnlike] = React.useState(false);\n  const [updatePostData, setUpdatePostData] = React.useState(false);\n  const [likeId, setLikeId] = React.useState(\"\");\n\n  const handleExpandClick = () => {\n    setExpanded(!expanded);\n  };\n\n  React.useEffect(() => {\n    fetch(API_URL + \"/post/allposts\", {\n      method: \"GET\",\n      headers: {\n        \"Authorization\": \"Bearer \" + props.jwtToken.userDetails.accessToken\n      }\n    }).then(res => res.json()).then(data => setPostsData(data.posts));\n  }, [updatePostData]);\n\n  const handleLikeClick = id => {\n    fetch(API_URL + \"/post/like\", {\n      method: \"PUT\",\n      body: JSON.stringify({\n        postId: id\n      }),\n      headers: {\n        \"Accept\": \"application/json\",\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": \"Bearer \" + props.jwtToken.userDetails.accessToken\n      }\n    }).then(res => res.json()).then(data => console.log(data)).then(() => setUpdatePostData(!updatePostData)).then(() => setLikeId(id)).finally(() => setShowUnlike(true));\n  };\n\n  const handleUnLikeClick = id => {\n    fetch(API_URL + \"/post/unlike\", {\n      method: \"PUT\",\n      body: JSON.stringify({\n        postId: id\n      }),\n      headers: {\n        \"Accept\": \"application/json\",\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": \"Bearer \" + props.jwtToken.userDetails.accessToken\n      }\n    }).then(res => res.json()).then(data => console.log(data)).then(() => setLikeId(id)).then(() => setUpdatePostData(!updatePostData)).finally(() => setShowUnlike(false));\n  };\n\n  console.log(postsData, 'postsData');\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(SNLandingPage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 17\n    }\n  }, postsData.map((post, index) => {\n    return /*#__PURE__*/React.createElement(Card, {\n      className: classes.root,\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      spacing: 3,\n      style: {\n        padding: \"20px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Avatar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 41\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 3,\n      style: {\n        textAlign: \"left\",\n        marginTop: \"10px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"userName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 41\n      }\n    }, post.postedBy.name))), /*#__PURE__*/React.createElement(CardMedia, {\n      className: classes.media,\n      image: post.photo,\n      title: post.title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(CardContent, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body2\",\n      color: \"textSecondary\",\n      component: \"p\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 37\n      }\n    }, post.description)), /*#__PURE__*/React.createElement(CardActions, {\n      disableSpacing: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      \"aria-label\": \"add to favorites\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 37\n      }\n    }, showUnlike && likeId === post._id ? /*#__PURE__*/React.createElement(FavoriteIcon, {\n      style: {\n        fill: \"#dd0c0c\"\n      },\n      onClick: () => handleUnLikeClick(post._id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 45\n      }\n    }) : likeId === post._id && /*#__PURE__*/React.createElement(FavoriteIcon, {\n      onClick: () => handleLikeClick(post._id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 68\n      }\n    })), /*#__PURE__*/React.createElement(IconButton, {\n      \"aria-label\": \"share\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(ShareIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 41\n      }\n    }))));\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 17\n    }\n  })));\n}\n\nfunction mapStateToProps(state) {\n  return {\n    jwtToken: state.accessToken\n  };\n}\n\nexport default connect(mapStateToProps)(PostCard);","map":{"version":3,"sources":["/Users/ajaykiranreddy/react/AjayUI/ajaui/src/components/apps/socialNetwork/Posts.jsx"],"names":["React","makeStyles","clsx","Card","CardHeader","CardMedia","CardContent","CardActions","Collapse","Avatar","IconButton","Typography","red","FavoriteIcon","ShareIcon","ExpandMoreIcon","MoreVertIcon","API_URL","connect","SNLandingPage","Grid","useStyles","theme","root","padding","marginTop","width","MuiCardHeader","title","float","media","height","paddingTop","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","avatar","backgroundColor","PostCard","props","classes","expanded","setExpanded","useState","postsData","setPostsData","showUnlike","setShowUnlike","updatePostData","setUpdatePostData","likeId","setLikeId","handleExpandClick","useEffect","fetch","method","headers","jwtToken","userDetails","accessToken","then","res","json","data","posts","handleLikeClick","id","body","JSON","stringify","postId","console","log","finally","handleUnLikeClick","map","post","index","textAlign","postedBy","name","photo","description","_id","fill","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Collapse from '@material-ui/core/Collapse';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport {red} from '@material-ui/core/colors';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport {API_URL} from \"../../../reduxModules/constants\";\nimport {connect} from \"react-redux\";\nimport SNLandingPage from \"./SNLandingPage\";\nimport {Grid} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        padding: \"20px\",\n        marginTop: \"4%\",\n        width: \"100%\",\n        MuiCardHeader: {\n            title: {\n                float: \"left\"\n            }\n        }\n    },\n    media: {\n        height: 0,\n        paddingTop: '56.25%', // 16:9\n    },\n    expand: {\n        transform: 'rotate(0deg)',\n        marginLeft: 'auto',\n        transition: theme.transitions.create('transform', {\n            duration: theme.transitions.duration.shortest,\n        }),\n    },\n    expandOpen: {\n        transform: 'rotate(180deg)',\n    },\n    avatar: {\n        backgroundColor: red[500],\n    },\n}));\n\nfunction PostCard(props) {\n    const classes = useStyles();\n    const [expanded, setExpanded] = React.useState(false);\n    const [postsData, setPostsData] = React.useState([]);\n    const [showUnlike, setShowUnlike] = React.useState(false);\n    const [updatePostData, setUpdatePostData] = React.useState(false);\n    const [likeId, setLikeId] = React.useState(\"\");\n    const handleExpandClick = () => {\n        setExpanded(!expanded);\n    };\n    \n    React.useEffect(() => {\n        fetch(API_URL + \"/post/allposts\", {\n            method: \"GET\",\n            headers: {\n                \"Authorization\": \"Bearer \" + props.jwtToken.userDetails.accessToken\n            }\n        })\n            .then(res => res.json())\n            .then(data => setPostsData(data.posts))\n    }, [updatePostData])\n    \n    const handleLikeClick = (id) => {\n        fetch(API_URL + \"/post/like\", {\n            method: \"PUT\",\n            body: JSON.stringify({\n                postId: id\n            }),\n            headers: {\n                \"Accept\": \"application/json\",\n                \"Content-Type\": \"application/json\",\n                \"Authorization\": \"Bearer \" + props.jwtToken.userDetails.accessToken\n            }\n        }).then(res => res.json())\n            .then(data => console.log(data))\n            .then(() => setUpdatePostData(!updatePostData))\n            .then(() => setLikeId(id))\n            .finally(() => setShowUnlike(true))\n    }\n    \n    const handleUnLikeClick = (id) => {\n        fetch(API_URL + \"/post/unlike\", {\n            method: \"PUT\",\n            body: JSON.stringify({\n                postId: id\n            }),\n            headers: {\n                \"Accept\": \"application/json\",\n                \"Content-Type\": \"application/json\",\n                \"Authorization\": \"Bearer \" + props.jwtToken.userDetails.accessToken\n            }\n        }).then(res => res.json())\n            .then(data => console.log(data))\n            .then(() => setLikeId(id))\n            .then(() => setUpdatePostData(!updatePostData))\n            .finally(() => setShowUnlike(false))\n    }\n    \n    console.log(postsData, 'postsData')\n    \n    return (\n        <div>\n            <SNLandingPage/>\n            <Grid container spacing={3}>\n                <Grid item xs={3}>\n                \n                </Grid>\n                <Grid item xs={6}>\n                    {postsData.map((post, index) => {\n                        return (\n                            <Card className={classes.root} key={index}>\n                                <Grid container spacing={3} style={{padding: \"20px\"}}>\n                                    <Grid item xs={1}>\n                                        <Avatar/>\n                                    </Grid>\n                                    <Grid item xs={3} style={{textAlign: \"left\", marginTop: \"10px\"}}>\n                                        <span className=\"userName\">{post.postedBy.name}</span>\n                                    </Grid>\n                                </Grid>\n                                <CardMedia\n                                    className={classes.media}\n                                    image={post.photo}\n                                    title={post.title}\n                                />\n                                <CardContent>\n                                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                                        {post.description}\n                                    </Typography>\n                                </CardContent>\n                                <CardActions disableSpacing>\n                                    <IconButton aria-label=\"add to favorites\">\n                                        {(showUnlike && likeId === post._id) ?\n                                            <FavoriteIcon style={{fill: \"#dd0c0c\"}}\n                                                          onClick={() => handleUnLikeClick(post._id)}/> :\n                                            likeId === post._id && <FavoriteIcon onClick={() => handleLikeClick(post._id)}/>}\n                                    </IconButton>\n                                    <IconButton aria-label=\"share\">\n                                        <ShareIcon/>\n                                    </IconButton>\n                                </CardActions>\n                            </Card>\n                        )\n                    })}\n                </Grid>\n                <Grid item xs={3}>\n                </Grid>\n            </Grid>\n        \n        \n        </div>\n    \n    );\n}\n\nfunction mapStateToProps(state) {\n    return {\n        jwtToken: state.accessToken\n    }\n}\n\nexport default connect(mapStateToProps)(PostCard)\n"]},"metadata":{},"sourceType":"module"}