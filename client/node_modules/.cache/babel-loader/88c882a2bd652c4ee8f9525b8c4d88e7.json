{"ast":null,"code":"var _jsxFileName = \"/Users/ajaykiranreddy/react/AjayUI/ajaui/src/components/apps/sports/BattingCard.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Switch from '@material-ui/core/Switch';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\nimport { connect } from \"react-redux\";\nimport './sports.css';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650\n  }\n});\n\nfunction BattingTable(props) {\n  const classes = useStyles();\n\n  function createData(name, howOut, runs, balls, fours, sixes, strikeRate) {\n    return {\n      name,\n      howOut,\n      runs,\n      balls,\n      fours,\n      sixes,\n      strikeRate\n    };\n  }\n\n  const Team1 = [props.scoreCardData.fullScorecard && props.scoreCardData.fullScorecard.innings[0].batsmen.map(row => createData(row.name, row.howOut, row.runs, row.balls, row.fours, row.sixes, row.strikeRate))];\n  const Team2 = [props.scoreCardData.fullScorecard.innings[1] && props.scoreCardData.fullScorecard.innings[1].batsmen.map(row => createData(row.name, row.howOut, row.runs, row.balls, row.fours, row.sixes, row.strikeRate))];\n  const rows = props.state ? Team1 : Team2;\n  return /*#__PURE__*/React.createElement(TableContainer, {\n    component: Paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, rows[0] ? /*#__PURE__*/React.createElement(Table, {\n    className: classes.table,\n    \"aria-label\": \"simple table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 25\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 25\n    }\n  }, \"Out\"), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 25\n    }\n  }, \"Runs\"), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 25\n    }\n  }, \"Balls\"), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 25\n    }\n  }, \"Fours\"), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 25\n    }\n  }, \"Sixes\"), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 25\n    }\n  }, \"Sr Rate\"))), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }, rows[0].map(row => /*#__PURE__*/React.createElement(TableRow, {\n    key: row.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    component: \"th\",\n    scope: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: \"#\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 32\n    }\n  }, row.name)), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 29\n    }\n  }, row.howOut), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 29\n    }\n  }, row.runs), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 29\n    }\n  }, row.balls), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 29\n    }\n  }, row.fours), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 29\n    }\n  }, row.sixes), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 29\n    }\n  }, row.strikeRate))))) : 'Match is Yet to start');\n}\n\nBattingCard.propTypes = {};\n\nfunction BattingCard(props) {\n  const [scoreCardData, setScoreCardData] = React.useState();\n  React.useEffect(() => {\n    // eslint-disable-next-line no-lone-blocks\n    {\n      props.selectedMatchDetails && fetch(`https://dev132-cricket-live-scores-v1.p.rapidapi.com/scorecards.php?seriesid=${props.selectedMatchDetails.meta.series.id}&matchid=${props.selectedMatchDetails.matchDetail.matchSummary.id}`, {\n        \"method\": \"GET\",\n        \"headers\": {\n          \"x-rapidapi-host\": \"dev132-cricket-live-scores-v1.p.rapidapi.com\",\n          \"x-rapidapi-key\": \"a2e362eba7mshf79992f1cbe7a73p1c653ejsn87bd2054f646\"\n        }\n      }).then(res => res.json()).then(data => setScoreCardData(data));\n    }\n  }, [props.selectedMatchDetails]);\n  console.log(scoreCardData, 'scoreCardData');\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  }, scoreCardData && /*#__PURE__*/React.createElement(Typography, {\n    component: \"div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 17\n    }\n  }, props.state ? scoreCardData.fullScorecard && scoreCardData.fullScorecard.innings[0].name : scoreCardData.fullScorecard.innings[1] && scoreCardData.fullScorecard.innings[1].name), scoreCardData && /*#__PURE__*/React.createElement(BattingTable, {\n    scoreCardData: scoreCardData,\n    state: props.state,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 35\n    }\n  })));\n}\n\nfunction mapStateToProps(state) {\n  return {\n    selectedMatchDetails: state.sports.selectedMatchDetails\n  };\n}\n\nexport default connect(mapStateToProps)(BattingCard);","map":{"version":3,"sources":["/Users/ajaykiranreddy/react/AjayUI/ajaui/src/components/apps/sports/BattingCard.jsx"],"names":["React","PropTypes","Switch","Grid","Typography","withStyles","connect","makeStyles","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","useStyles","table","minWidth","BattingTable","props","classes","createData","name","howOut","runs","balls","fours","sixes","strikeRate","Team1","scoreCardData","fullScorecard","innings","batsmen","map","row","Team2","rows","state","BattingCard","propTypes","setScoreCardData","useState","useEffect","selectedMatchDetails","fetch","meta","series","id","matchDetail","matchSummary","then","res","json","data","console","log","mapStateToProps","sports"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Switch from '@material-ui/core/Switch';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\nimport {connect} from \"react-redux\";\nimport './sports.css';\n\n\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nconst useStyles = makeStyles({\n    table: {\n        minWidth: 650,\n    },\n});\n\n\n\nfunction BattingTable(props) {\n    const classes = useStyles();\n\n    function createData(name, howOut, runs, balls, fours, sixes, strikeRate) {\n        return { name, howOut, runs, balls, fours, sixes, strikeRate };\n    }\n\n    const Team1 = [\n        props.scoreCardData.fullScorecard && props.scoreCardData.fullScorecard.innings[0].batsmen.map( row =>\n                    createData(row.name, row.howOut, row.runs, row.balls, row.fours,row.sixes,row.strikeRate))\n    ];\n\n    const Team2=[\n        props.scoreCardData.fullScorecard.innings[1] && props.scoreCardData.fullScorecard.innings[1].batsmen.map( row =>\n            createData(row.name, row.howOut, row.runs, row.balls, row.fours,row.sixes,row.strikeRate))\n    ];\n\n    const rows=props.state ? Team1 : Team2;\n\n    return (\n        <TableContainer component={Paper}>\n            {rows[0] ?\n            <Table className={classes.table} aria-label=\"simple table\">\n                <TableHead>\n                    <TableRow>\n                        <TableCell>Name</TableCell>\n                        <TableCell align=\"right\">Out</TableCell>\n                        <TableCell align=\"right\">Runs</TableCell>\n                        <TableCell align=\"right\">Balls</TableCell>\n                        <TableCell align=\"right\">Fours</TableCell>\n                        <TableCell align=\"right\">Sixes</TableCell>\n                        <TableCell align=\"right\">Sr Rate</TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {rows[0].map((row) => (\n                        <TableRow key={row.name}>\n                            <TableCell component=\"th\" scope=\"row\">\n                               <a href='#'>{row.name}</a>\n                            </TableCell>\n                            <TableCell align=\"right\">{row.howOut}</TableCell>\n                            <TableCell align=\"right\">{row.runs}</TableCell>\n                            <TableCell align=\"right\">{row.balls}</TableCell>\n                            <TableCell align=\"right\">{row.fours}</TableCell>\n                            <TableCell align=\"right\">{row.sixes}</TableCell>\n                            <TableCell align=\"right\">{row.strikeRate}</TableCell>\n                        </TableRow>\n                    )) }\n                </TableBody>\n            </Table>\n                        : 'Match is Yet to start'}\n        </TableContainer>\n    );\n}\n\nBattingCard.propTypes = {\n\n};\n\nfunction BattingCard(props) {\n\n\n\n    const [scoreCardData,setScoreCardData]=React.useState();\n\n    React.useEffect(()=>{\n        // eslint-disable-next-line no-lone-blocks\n        {\n            props.selectedMatchDetails &&\n            fetch(`https://dev132-cricket-live-scores-v1.p.rapidapi.com/scorecards.php?seriesid=${props.selectedMatchDetails.meta.series.id}&matchid=${props.selectedMatchDetails.matchDetail.matchSummary.id}`, {\n                \"method\": \"GET\",\n                \"headers\": {\n                    \"x-rapidapi-host\": \"dev132-cricket-live-scores-v1.p.rapidapi.com\",\n                    \"x-rapidapi-key\": \"a2e362eba7mshf79992f1cbe7a73p1c653ejsn87bd2054f646\"\n                }\n            }).then(res => res.json())\n                .then(data => setScoreCardData(data))\n        }\n    },[props.selectedMatchDetails])\n\n    console.log(scoreCardData,'scoreCardData')\n\n    return (\n        <div>\n            {scoreCardData &&\n            <Typography component=\"div\">\n\n                <h4>{props.state ? scoreCardData.fullScorecard && scoreCardData.fullScorecard.innings[0].name :\n                    scoreCardData.fullScorecard.innings[1] && scoreCardData.fullScorecard.innings[1].name}</h4>\n                {scoreCardData && <BattingTable scoreCardData={scoreCardData}\n                             state={props.state}/>}\n            </Typography>\n            }\n        </div>\n    );\n}\n\nfunction mapStateToProps(state){\n    return{\n        selectedMatchDetails:state.sports.selectedMatchDetails\n    }\n}\n\nexport default connect(mapStateToProps) (BattingCard)"]},"metadata":{},"sourceType":"module"}