{"ast":null,"code":"var _jsxFileName = \"/Users/ajaykiranreddy/react/AjayUI/ajaui/src/components/apps/todo/ToDoModal.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport history from \"../../../utils/history\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nToDoModal.propTypes = {};\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650\n  },\n  formControl: {\n    minWidth: 120\n  }\n});\n\nfunction ToDoModal(props) {\n  const classes = useStyles();\n\n  const onSubmit = () => {\n    const postObject = {\n      userName: empName,\n      taskName: taskName,\n      status: status\n    };\n    console.log(postObject, 'postObject');\n    fetch('http://localhost:5000/users/add', {\n      method: \"Post\",\n      body: JSON.stringify(postObject),\n      headers: {\n        \"Accept\": \"application/json\",\n        \"Content-Type\": \"application/json\" // key: \"Content-Type\",\n        // value: \"application/json\"\n\n      }\n    }).then(res => res.json()).then(() => history.push('/todo')).catch(err => console.log(err));\n  };\n\n  const [taskName, setTaskName] = React.useState();\n  const [empName, setEmpName] = React.useState();\n  const [status, setStatus] = React.useState();\n  const [open, setOpen] = React.useState(false);\n\n  const handleEmployeeName = e => {\n    setEmpName(e.target.value);\n  };\n\n  const handleTaskName = e => {\n    setTaskName(e.target.value);\n  };\n\n  const routeBackTodo = () => {\n    history.push('/todo');\n  };\n\n  const handleChange = event => {\n    setStatus(event.target.value);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    style: {\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    style: {\n      marginTop: \"2%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    id: \"outlined-basic\",\n    label: \"Employee Name\",\n    onChange: handleEmployeeName,\n    value: empName,\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    id: \"outlined\",\n    label: \"Task Name\",\n    onChange: handleTaskName,\n    value: taskName,\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 41\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    className: classes.formControl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    id: \"demo-controlled-open-select-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 41\n    }\n  }, \"Select Status\"), /*#__PURE__*/React.createElement(Select, {\n    labelId: \"demo-controlled-open-select-label\",\n    id: \"demo-controlled-open-select\",\n    open: open,\n    onClose: handleClose,\n    onOpen: handleOpen,\n    value: status,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"em\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 49\n    }\n  }, \"None\")), /*#__PURE__*/React.createElement(MenuItem, {\n    value: 'Started',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 45\n    }\n  }, \"Started\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: 'Yet to pick',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 45\n    }\n  }, \"Yet to pick\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: 'Completed',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 45\n    }\n  }, \"Completed\"))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 37\n    }\n  }))), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: routeBackTodo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 29\n    }\n  }, \"Cancel\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 29\n    }\n  }, \"Submit\"))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 21\n    }\n  }))));\n}\n\nexport default ToDoModal;","map":{"version":3,"sources":["/Users/ajaykiranreddy/react/AjayUI/ajaui/src/components/apps/todo/ToDoModal.jsx"],"names":["React","PropTypes","Grid","Paper","TextField","FormControl","InputLabel","Select","MenuItem","history","makeStyles","ToDoModal","propTypes","useStyles","table","minWidth","formControl","props","classes","onSubmit","postObject","userName","empName","taskName","status","console","log","fetch","method","body","JSON","stringify","headers","then","res","json","push","catch","err","setTaskName","useState","setEmpName","setStatus","open","setOpen","handleEmployeeName","e","target","value","handleTaskName","routeBackTodo","handleChange","event","handleClose","handleOpen","width","marginTop"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport history from \"../../../utils/history\";\nimport {makeStyles} from \"@material-ui/core/styles\";\n\nToDoModal.propTypes = {};\n\nconst useStyles = makeStyles({\n    table: {\n        minWidth: 650,\n    },\n    formControl: {\n        minWidth: 120,\n    },\n});\n\nfunction ToDoModal(props) {\n    const classes = useStyles();\n    const onSubmit = () => {\n\n        const postObject = {\n            userName: empName,\n            taskName: taskName,\n            status: status\n        };\n\n        console.log(postObject, 'postObject')\n\n        fetch('http://localhost:5000/users/add', {\n            method: \"Post\",\n            body: JSON.stringify(postObject),\n            headers: {\n                \"Accept\": \"application/json\",\n                \"Content-Type\": \"application/json\",\n                // key: \"Content-Type\",\n                // value: \"application/json\"\n            }\n        }).then(res => res.json())\n            .then(() => history.push('/todo'))\n            .catch(err => console.log(err))\n    }\n\n\n    const [taskName, setTaskName] = React.useState();\n    const [empName, setEmpName] = React.useState();\n    const [status, setStatus] = React.useState()\n    const [open, setOpen] = React.useState(false);\n\n    const handleEmployeeName = (e) => {\n        setEmpName(e.target.value)\n    }\n\n    const handleTaskName = (e) => {\n        setTaskName(e.target.value)\n    }\n\n    const routeBackTodo = () => {\n        history.push('/todo')\n    }\n\n    const handleChange = (event) => {\n        setStatus(event.target.value);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    const handleOpen = () => {\n        setOpen(true);\n    };\n\n    return (\n        <div>\n            <React.Fragment>\n                <Grid container spacing={2}>\n                    <Grid item xs={3}>\n\n                    </Grid>\n\n                    <Grid item xs={6}>\n                        <Paper style={{width: '100%'}}>\n\n                            <Grid container spacing={2} style={{marginTop: \"2%\"}}>\n                                <Grid item xs={6}>\n                                    <TextField id=\"outlined-basic\"\n                                               label=\"Employee Name\"\n                                               onChange={handleEmployeeName}\n                                               value={empName}\n                                               variant=\"outlined\"/>\n                                    <div>\n                                        <TextField id=\"outlined\"\n                                                   label=\"Task Name\"\n                                                   onChange={handleTaskName}\n                                                   value={taskName}\n                                                   variant=\"outlined\"/>\n                                    </div>\n\n\n                                </Grid>\n\n                                <Grid item xs={6}>\n                                    <FormControl className={classes.formControl}>\n                                        <InputLabel id=\"demo-controlled-open-select-label\">Select\n                                            Status</InputLabel>\n                                        <Select\n                                            labelId=\"demo-controlled-open-select-label\"\n                                            id=\"demo-controlled-open-select\"\n                                            open={open}\n                                            onClose={handleClose}\n                                            onOpen={handleOpen}\n                                            value={status}\n                                            onChange={handleChange}\n                                        >\n                                            <MenuItem value=\"\">\n                                                <em>None</em>\n                                            </MenuItem>\n                                            <MenuItem value={'Started'}>Started</MenuItem>\n                                            <MenuItem value={'Yet to pick'}>Yet to pick</MenuItem>\n                                            <MenuItem value={'Completed'}>Completed</MenuItem>\n                                        </Select>\n                                    </FormControl>\n\n                                    <div>\n                                        {/*<MaterialUIPickers/>*/}\n                                    </div>\n                                </Grid>\n                            </Grid>\n\n                            <button onClick={routeBackTodo}>\n                                Cancel\n                            </button>\n\n                            <button onClick={onSubmit}>\n                                Submit\n                            </button>\n                        </Paper>\n                    </Grid>\n\n                    <Grid item xs={3}>\n\n                    </Grid>\n                </Grid>\n\n\n            </React.Fragment>\n        </div>\n    );\n}\n\nexport default ToDoModal;"]},"metadata":{},"sourceType":"module"}