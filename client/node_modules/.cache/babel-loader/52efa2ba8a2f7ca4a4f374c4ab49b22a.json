{"ast":null,"code":"var _jsxFileName = \"/Users/ajaykiranreddy/react/AjayUI/ajaui/src/components/apps/socialNetwork/UserProfile.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Grid } from \"@material-ui/core\";\nimport \"./snstyle.css\";\nimport SNLandingPage from \"./SNLandingPage\";\nimport { API_URL } from \"../../../reduxModules/constants\";\nimport { connect } from \"react-redux\";\nimport Button from \"@material-ui/core/Button\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport EditIcon from '@material-ui/icons/Edit';\nUserProfile.propTypes = {};\nconst useStyles = makeStyles(theme => ({\n  button: {\n    margin: theme.spacing(1)\n  }\n}));\n\nfunction UserProfile(props) {\n  const classes = useStyles();\n  const [myPostsData, setMyPostsData] = React.useState();\n  React.useEffect(() => {\n    fetch(API_URL + `/users/${props.selectedUserProfileId}`, {\n      method: \"GET\",\n      headers: {\n        \"Authorization\": \"Bearer \" + props.jwtToken.userDetails.accessToken\n      }\n    }).then(res => res.json()).then(data => setMyPostsData(data.posts));\n  }, []);\n\n  const handleFollowButton = followId => {\n    fetch(API_URL + `/users/follow`, {\n      method: \"PUT\",\n      body: JSON.stringify({\n        followId\n      }),\n      headers: {\n        \"Accept\": \"application/json\",\n        \"Content-type\": \"application/json\",\n        \"Authorization\": props.jwtToken.userDetails.accessToken\n      }\n    }).then(res => res.json()).then(data => console.log(data)).catch(err => console.log(err));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(SNLandingPage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }), myPostsData && /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"profileHeader\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"thumbnail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"thumbnailDiv\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: myPostsData[0].postedBy.photo,\n    className: \"thumbnailDiv\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 41\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 9,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"profileStats\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"profileName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 41\n    }\n  }, myPostsData && myPostsData[0].postedBy.name), /*#__PURE__*/React.createElement(Button, {\n    style: {\n      marginTop: \"5%\",\n      float: \"right\",\n      width: \"200px\",\n      height: \"50px\",\n      marginLeft: \"2%\"\n    },\n    variant: \"contained\" // color=\"secondary\"\n    ,\n    className: classes.button,\n    startIcon: /*#__PURE__*/React.createElement(EditIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 56\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 41\n    }\n  }, myPostsData[0].postedBy._id === props.jwtToken.userDetails.user._id ? /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      width: \"200px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 49\n    }\n  }, \"Edit Profile \") : /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      width: \"200px\"\n    },\n    onClick: () => handleFollowButton(myPostsData[0].postedBy._id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 49\n    }\n  }, \"Follow\"))), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    style: {\n      textAlign: \"left\",\n      width: \"50%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 4,\n    className: \"subHeaders\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 41\n    }\n  }, \"Posts\"), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 4,\n    className: \"subHeaders\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 41\n    }\n  }, \"Followers\"), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 4,\n    className: \"subHeaders\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 41\n    }\n  }, \"Following\")), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    style: {\n      textAlign: \"left\",\n      width: \"50%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 4,\n    className: \"subHeadersValues\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 41\n    }\n  }, myPostsData && myPostsData.length), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 4,\n    className: \"subHeadersValues\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 41\n    }\n  }, \"120\"), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 4,\n    className: \"subHeadersValues\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 41\n    }\n  }, \"3\")))))), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    style: {\n      marginTop: \"3%\",\n      backgroundColor: \"#dae8e2\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 21\n    }\n  }, myPostsData && myPostsData.map((post, index) => {\n    return /*#__PURE__*/React.createElement(Grid, {\n      key: index,\n      item: true,\n      xs: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 36\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      style: {\n        padding: \"20px\",\n        width: \"300px\",\n        height: \"300px\"\n      },\n      src: post.photo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 33\n      }\n    }));\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 17\n    }\n  })));\n}\n\nfunction mapStateToProps(state) {\n  return {\n    jwtToken: state.accessToken,\n    selectedUserProfileId: state.SelectedUserProfileId\n  };\n}\n\nexport default connect(mapStateToProps)(UserProfile);","map":{"version":3,"sources":["/Users/ajaykiranreddy/react/AjayUI/ajaui/src/components/apps/socialNetwork/UserProfile.jsx"],"names":["React","PropTypes","Grid","SNLandingPage","API_URL","connect","Button","makeStyles","EditIcon","UserProfile","propTypes","useStyles","theme","button","margin","spacing","props","classes","myPostsData","setMyPostsData","useState","useEffect","fetch","selectedUserProfileId","method","headers","jwtToken","userDetails","accessToken","then","res","json","data","posts","handleFollowButton","followId","body","JSON","stringify","console","log","catch","err","postedBy","photo","name","marginTop","float","width","height","marginLeft","_id","user","textAlign","length","backgroundColor","map","post","index","padding","mapStateToProps","state","SelectedUserProfileId"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport {Grid} from \"@material-ui/core\";\nimport \"./snstyle.css\";\nimport SNLandingPage from \"./SNLandingPage\";\nimport {API_URL} from \"../../../reduxModules/constants\";\nimport {connect} from \"react-redux\";\nimport Button from \"@material-ui/core/Button\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport EditIcon from '@material-ui/icons/Edit';\n\nUserProfile.propTypes = {};\n\nconst useStyles = makeStyles((theme) => ({\n    button: {\n        margin: theme.spacing(1),\n    },\n}));\n\nfunction UserProfile(props) {\n    const classes = useStyles();\n    const [myPostsData, setMyPostsData] = React.useState();\n    \n    React.useEffect(() => {\n        fetch(API_URL + `/users/${props.selectedUserProfileId}`, {\n            method: \"GET\",\n            headers: {\n                \"Authorization\": \"Bearer \" + props.jwtToken.userDetails.accessToken\n            }\n        }).then(res => res.json())\n            .then(data => setMyPostsData(data.posts))\n    }, [])\n    \n    const handleFollowButton=(followId)=>{\n        fetch(API_URL+`/users/follow`,{\n            method:\"PUT\",\n            body:JSON.stringify({\n                followId\n            }),\n            headers:{\n                \"Accept\":\"application/json\",\n                \"Content-type\":\"application/json\",\n                \"Authorization\":props.jwtToken.userDetails.accessToken\n            }\n        }).then(res=>res.json())\n            .then(data=>console.log(data))\n            .catch(err=>console.log(err))\n    }\n    return (\n        <div>\n            <SNLandingPage/>\n            {myPostsData &&\n            <Grid container spacing={3}>\n                <Grid item xs={2}>\n                \n                </Grid>\n                \n                <Grid item xs={8}>\n                    \n                    <div className=\"profileHeader\">\n                        <div className=\"thumbnail\">\n                            <Grid container spacing={3}>\n                                <Grid item xs={3}>\n                                    <div className=\"thumbnailDiv\">\n                                        <img\n                                            src={myPostsData[0].postedBy.photo}\n                                            className=\"thumbnailDiv\"/>\n                                    </div>\n                                </Grid>\n                                \n                                <Grid item xs={9}>\n                                    <div className=\"profileStats\">\n                                        <h3 className=\"profileName\">{myPostsData && myPostsData[0].postedBy.name}</h3>\n                                        <Button\n                                            style={{\n                                                marginTop: \"5%\",\n                                                float: \"right\",\n                                                width: \"200px\",\n                                                height: \"50px\",\n                                                marginLeft: \"2%\"\n                                            }}\n                                            variant=\"contained\"\n                                            // color=\"secondary\"\n                                            className={classes.button}\n                                            startIcon={<EditIcon/>}\n                                        >\n                                            \n                                            {myPostsData[0].postedBy._id === props.jwtToken.userDetails.user._id ?\n                                                <span style={{width: \"200px\"}}>Edit Profile </span> :\n                                                <span style={{width: \"200px\"}}\n                                                      onClick={() => handleFollowButton(myPostsData[0].postedBy._id)}>Follow</span>}\n                                        \n                                        </Button>\n                                    </div>\n                                    <Grid container spacing={3} style={{textAlign: \"left\", width: \"50%\"}}>\n                                        <Grid item xs={4} className=\"subHeaders\">Posts</Grid>\n                                        \n                                        <Grid item xs={4} className=\"subHeaders\">Followers</Grid>\n                                        \n                                        <Grid item xs={4} className=\"subHeaders\">Following</Grid>\n                                    </Grid>\n                                    \n                                    <Grid container spacing={3} style={{textAlign: \"left\", width: \"50%\"}}>\n                                        <Grid item xs={4}\n                                              className=\"subHeadersValues\">{myPostsData && myPostsData.length}</Grid>\n                                        \n                                        <Grid item xs={4} className=\"subHeadersValues\">120</Grid>\n                                        \n                                        <Grid item xs={4} className=\"subHeadersValues\">3</Grid>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                        </div>\n                    </div>\n                    \n                    <Grid container spacing={3} style={{marginTop: \"3%\", backgroundColor: \"#dae8e2\"}}>\n                        {myPostsData && myPostsData.map((post, index) => {\n                            return <Grid key={index} item xs={4}>\n                                <img style={{padding: \"20px\", width: \"300px\", height: \"300px\"}} src={post.photo}/>\n                            </Grid>\n                        })}\n                    \n                    </Grid>\n                </Grid>\n                \n                <Grid item xs={2}>\n                \n                </Grid>\n            \n            </Grid>\n            }\n        </div>\n    );\n}\n\nfunction mapStateToProps(state) {\n    return {\n        jwtToken: state.accessToken,\n        selectedUserProfileId: state.SelectedUserProfileId\n    }\n}\n\nexport default connect(mapStateToProps)(UserProfile)\n\n"]},"metadata":{},"sourceType":"module"}